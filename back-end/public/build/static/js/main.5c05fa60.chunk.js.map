{"version":3,"sources":["reportWebVitals.js","reducers/loginReducer.js","reducers/index.js","store/index.js","components/EmailInput.jsx","components/LoginButton.jsx","components/PasswordInput.jsx","components/LoginErrorMessage.jsx","components/RegisterButton.jsx","helpers/constants.js","helpers/validation/validateEmail.js","helpers/validation/validateName.js","helpers/validation/validatePassword.js","pages/Login.jsx","components/NameInput.jsx","components/RegisterErrorMessage.jsx","pages/Register.jsx","components/navigation_bar/CartTotal.jsx","components/navigation_bar/HamburgerButton.jsx","components/navigation_bar/SideNav.jsx","helpers/getWindowSize.jsx","components/navigation_bar/TopBar.jsx","components/ProductCard.jsx","pages/Products.jsx","components/PrivateRoute.jsx","components/checkout_cart/CheckoutProductTable.jsx","components/checkout_cart/CheckoutDeliveryData.jsx","pages/CheckoutCart.jsx","components/order_details/OrderDetailsTable.jsx","components/order_details/OrderStatusHeader.jsx","components/order_details/CardOrderStatusHeader.jsx","components/order_details/CardOrderDetailsTable.jsx","pages/ListSaleById.jsx","components/order_details/SellerOrderDetailsTable.jsx","components/order_details/SellerOrderStatusHeader.jsx","pages/ListSellerSaleById.jsx","components/orders/OrderCard.jsx","pages/ListOrders.jsx","components/orders/SellerOrderCard.jsx","pages/SellerOrders.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","loginReducer","state","action","type","email","payload","password","rootReducer","combineReducers","store","createStore","EmailInput","props","setStateEmail","emailTestId","title","Form","Label","Control","id","onChange","e","target","value","LoginButton","dispatchOnSubmit","disabled","Button","variant","onClick","PasswordInput","setStatePassword","passwordTestId","LoginErrorMessage","hideErrorMessage","Alert","hidden","RegisterButton","history","useHistory","push","serverUrl","process","validateEmailFormat","test","validateName","name","length","validatePassword","Login","useState","setDisable","setHideErrorMessage","useEffect","alreadyLoggedIn","JSON","parse","localStorage","getItem","role","a","axios","post","response","data","setItem","stringify","redirect","to","setTimeout","Container","className","Row","Col","Image","src","NameInput","setStateName","nameTestId","Register","setDisabled","setHidden","createUser","parsedResponse","user","token","fluid","RegisterErrorMessage","CartTotal","cartTotal","Nav","Link","href","ShoppingCartOutlined","style","fontSize","toFixed","toString","split","join","HamburgerButton","openMenu","setOpenMenu","SideNav","logout","openMenuWithWidth","width","useWindowSize","undefined","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","TopBar","onSellerPage","location","pathname","includes","clear","Navbar","sticky","bg","expand","flexWrap","padding","navbarScroll","Brand","alt","marginRight","Text","defaultProps","ProductCard","product","price","urlImage","quantity","setCart","cart","Card","Img","heigth","Title","whiteSpace","overflow","textOverflow","textAlign","InputGroup","cardId","elementId","input","document","getElementById","parseInt","indexOfProduct","indexOf","newCart","removeOne","as","min","max","inputValue","idArray","changeCart","placeholder","defaultValue","maxWidth","addOne","Products","setCartTotal","get","productsWithQuantity","map","getProducts","sum","forEach","element","xs","md","sm","index","PrivateRoute","Component","component","rest","isLoggedIn","render","from","CheckoutProductTable","Table","responsive","hover","productIndex","splice","removeItem","colSpan","CheckoutDeliveryData","finishSale","setDeliveryAddress","setDeliveryNumber","setSellerId","sellers","Dropdown","deliveryAddress","deliveryNumber","sellerId","setSellers","localCart","olyItensInCart","filter","getLocalStorageCartItens","getSellers","config","headers","authorization","newSale","totalPrice","products","saleId","console","log","OrderDetailsTable","entry","SalesProduct","parseFloat","OrderStatusHeader","updateButtonsText","orderId","sellerName","orderStatus","dateArray","saleDate","day","month","year","slice","formattedDate","CardOrderStatusHeader","Body","preparing","setPreparing","setOrderStatus","order","setOrder","showMobileCards","historyArray","myOrder","status","getOrder","seller","CardOrderDetailsTable","SellerOrderDetailsTable","SellerOrderStatusHeader","ListSellerSaleById","OrderCard","date","flexDirection","justifyContent","alignItems","minHeight","marginBottom","ListOrders","orders","setOrders","dbOrders","getOrders","SellerOrderCard","display","sales","App","path","CheckoutCart","ListSaleById","SellerOrders","strict","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.5c05fa60.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const INITIAL_STATE = {};\r\n\r\nfunction loginReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n  case 'SET_EMAIL':\r\n    return { ...state, email: action.payload };\r\n  case 'SET_PASSWORD':\r\n    return { ...state, password: action.payload };\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default loginReducer;\r\n","import { combineReducers } from 'redux';\r\nimport loginReducer from './loginReducer';\r\n\r\nconst rootReducer = combineReducers({ loginReducer });\r\n\r\nexport default rootReducer;\r\n","import { createStore } from 'redux';\r\nimport rootReducer from '../reducers';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\n/* eslint-disable no-underscore-dangle */\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n// );\r\n/* eslint-enable */\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nfunction EmailInput(props) {\r\n  const { setStateEmail, emailTestId, title } = props;\r\n  return (\r\n    <Form.Label>\r\n      { title }\r\n      <Form.Control\r\n        id=\"email-input\"\r\n        data-testid={ emailTestId }\r\n        onChange={ (e) => {\r\n          setStateEmail(e.target.value);\r\n        } }\r\n        type=\"text\"\r\n      />\r\n    </Form.Label>\r\n  );\r\n}\r\n\r\nexport default EmailInput;\r\n\r\nEmailInput.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  emailTestId: Proptypes.string.isRequired,\r\n  setStateEmail: Proptypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction LoginButton(props) {\r\n  const { dispatchOnSubmit, disabled } = props;\r\n  return (\r\n    <Button\r\n      variant=\"success\"\r\n      data-testid=\"common_login__button-login\"\r\n      disabled={ disabled }\r\n      onClick={ dispatchOnSubmit }\r\n      type=\"button\"\r\n    >\r\n      Entrar\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default LoginButton;\r\n\r\nLoginButton.propTypes = {\r\n  dispatchOnSubmit: Proptypes.func.isRequired,\r\n  disabled: Proptypes.bool.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nfunction PasswordInput(props) {\r\n  const { setStatePassword, passwordTestId } = props;\r\n  return (\r\n    <Form.Label>\r\n      Senha\r\n      <Form.Control\r\n        data-testid={ passwordTestId }\r\n        onChange={ (e) => {\r\n          setStatePassword(e.target.value);\r\n        } }\r\n        type=\"password\"\r\n      />\r\n    </Form.Label>\r\n  );\r\n}\r\n\r\nexport default PasswordInput;\r\n\r\nPasswordInput.propTypes = {\r\n  passwordTestId: Proptypes.string.isRequired,\r\n  setStatePassword: Proptypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nfunction LoginErrorMessage({ hideErrorMessage }) {\r\n  return (\r\n    <Alert variant=\"warning\" hidden={ hideErrorMessage }>\r\n      Usuário/Senha inválidos\r\n    </Alert>\r\n  );\r\n}\r\n\r\nexport default LoginErrorMessage;\r\n\r\nLoginErrorMessage.propTypes = {\r\n  hideErrorMessage: Proptypes.bool.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction RegisterButton() {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Button\r\n      variant=\"warning\"\r\n      onClick={ () => history.push('/register') }\r\n      data-testid=\"common_login__button-register\"\r\n      type=\"button\"\r\n    >\r\n      Ainda não tenho conta\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default RegisterButton;\r\n","const serverUrl = process.env.NODE_ENV === 'production'\r\n  ? process.env.REACT_APP_PROD_API_URL\r\n  : process.env.REACT_APP_DEV_API_URL;\r\n// const serverUrl = 'https://grupo-19-delivery-app.herokuapp.com';\r\nconst test = 'teste';\r\n\r\nexport {\r\n  serverUrl,\r\n  test,\r\n};\r\n","const validateEmailFormat = (email) => {\r\n  const regexp = /\\S+@\\S+\\.\\S+/;\r\n  return regexp.test(email);\r\n};\r\n\r\nexport default validateEmailFormat;\r\n","const validateName = (name) => {\r\n  const minLength = 11;\r\n  return (name.length > minLength);\r\n};\r\n\r\nexport default validateName;\r\n","const validatePassword = (password) => {\r\n  const minLength = 5;\r\n  return (password.length > minLength);\r\n};\r\n\r\nexport default validatePassword;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Col, Container, Form, Image, Row } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport EmailInput from '../components/EmailInput';\r\nimport LoginButton from '../components/LoginButton';\r\nimport PasswordInput from '../components/PasswordInput';\r\nimport LoginErrorMessage from '../components/LoginErrorMessage';\r\nimport RegisterButton from '../components/RegisterButton';\r\nimport { validateEmailFormat, validatePassword } from '../helpers/validation';\r\nimport { serverUrl } from '../helpers/constants';\r\n\r\nfunction Login() {\r\n  const [email, setStateEmail] = useState('');\r\n  const [password, setStatePassword] = useState('');\r\n  const [disabled, setDisable] = useState(true);\r\n  const [hideErrorMessage, setHideErrorMessage] = useState(true);\r\n  const history = useHistory();\r\n  const emailTestId = 'common_login__input-email';\r\n  const passwordTestId = 'common_login__input-password';\r\n  const title = 'Login';\r\n\r\n  useEffect(() => {\r\n    if (password && email) {\r\n      if (validateEmailFormat(email) && validatePassword(password)) {\r\n        setDisable(false);\r\n      } else {\r\n        setDisable(true);\r\n      }\r\n    }\r\n  }, [email, password]);\r\n\r\n  useEffect(() => {\r\n    const alreadyLoggedIn = JSON.parse(localStorage.getItem('user'));\r\n    if (alreadyLoggedIn) {\r\n      const { role } = alreadyLoggedIn;\r\n      if (role === 'customer') return history.push('/customer/products');\r\n      if (role === 'seller') return history.push('/seller/orders');\r\n    }\r\n  });\r\n\r\n  const dispatchOnSubmit = async () => {\r\n    try {\r\n      const response = await axios.post(`${serverUrl}/login`, { email, password });\r\n      const { data } = response;\r\n      localStorage.setItem('user', JSON.stringify(data));\r\n      redirect.to[data.role]();\r\n    } catch (e) {\r\n      const delay = 3000;\r\n      setHideErrorMessage(false);\r\n      setTimeout(() => setHideErrorMessage(true), delay);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center\">\r\n      <Form>\r\n        <Row>\r\n          <Col>\r\n            <Image src=\"images/logo.svg\" />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"d-flex justify-content-center\">\r\n            <h3>Disk-Birita</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <EmailInput\r\n              title={ title }\r\n              setStateEmail={ setStateEmail }\r\n              emailTestId={ emailTestId }\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <PasswordInput\r\n              setStatePassword={ setStatePassword }\r\n              passwordTestId={ passwordTestId }\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"d-flex justify-content-center\">\r\n            <LoginButton dispatchOnSubmit={ dispatchOnSubmit } disabled={ disabled } />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"d-flex justify-content-center\">\r\n            <RegisterButton />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"d-flex justify-content-center\">\r\n            <LoginErrorMessage hideErrorMessage={ hideErrorMessage } />\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nfunction NameInput(props) {\r\n  const { setStateName, nameTestId } = props;\r\n  return (\r\n    <Form.Label>\r\n      Nome\r\n      <Form.Control\r\n        id=\"name-input\"\r\n        data-testid={ nameTestId }\r\n        onChange={ (e) => {\r\n          setStateName(e.target.value);\r\n        } }\r\n        type=\"text\"\r\n      />\r\n    </Form.Label>\r\n  );\r\n}\r\n\r\nexport default NameInput;\r\n\r\nNameInput.propTypes = {\r\n  nameTestId: Proptypes.string.isRequired,\r\n  setStateName: Proptypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nfunction LoginErrorMessage({ hidden }) {\r\n  return (\r\n    <Alert\r\n      variant=\"warning\"\r\n      hidden={ hidden }\r\n      data-testid=\"common_register__element-invalid_register\"\r\n    >\r\n      Usuário já existente!\r\n    </Alert>\r\n  );\r\n}\r\n\r\nexport default LoginErrorMessage;\r\n\r\nLoginErrorMessage.propTypes = {\r\n  hidden: Proptypes.bool.isRequired,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport { Col, Container, Form, Image, Row } from 'react-bootstrap';\r\nimport EmailInput from '../components/EmailInput';\r\nimport PasswordInput from '../components/PasswordInput';\r\nimport NameInput from '../components/NameInput';\r\nimport RegisterErrorMessage from '../components/RegisterErrorMessage';\r\nimport {\r\n  validateEmailFormat,\r\n  validateName, validatePassword } from '../helpers/validation';\r\nimport { serverUrl } from '../helpers/constants';\r\n\r\nfunction Register() {\r\n  const history = useHistory();\r\n\r\n  const [name, setStateName] = useState();\r\n  const [email, setStateEmail] = useState();\r\n  const [password, setStatePassword] = useState();\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [hidden, setHidden] = useState(true);\r\n\r\n  const nameTestId = 'common_register__input-name';\r\n  const emailTestId = 'common_register__input-email';\r\n  const passwordTestId = 'common_register__input-password';\r\n  const title = 'Email';\r\n\r\n  useEffect(() => {\r\n    if (password && email && name) {\r\n      if (validateEmailFormat(email) && validatePassword(password)\r\n      && validateName(name)) {\r\n        setDisabled(false);\r\n      } else {\r\n        setDisabled(true);\r\n      }\r\n    }\r\n  }, [email, name, password]);\r\n\r\n  const createUser = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${serverUrl}/register`, { name, email, password },\r\n      );\r\n      const parsedResponse = response.data;\r\n      const user = {\r\n        name: parsedResponse.name,\r\n        email: parsedResponse.email,\r\n        role: parsedResponse.role,\r\n        token: parsedResponse.token,\r\n      };\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      history.push('/customer/products');\r\n    } catch (e) {\r\n      const delay = 3000;\r\n      setHidden(false);\r\n      setTimeout(() => setHidden(true), delay);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center\">\r\n      <Form className=\"align-self-center\">\r\n        <Row>\r\n          <Col>\r\n            <Image src=\"images/logo.svg\" className=\".login-logo\" fluid />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"d-flex justify-content-center\">\r\n            <h3>Disk-Birita</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <NameInput\r\n              nameTestId={ nameTestId }\r\n              setStateName={ setStateName }\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <EmailInput\r\n              emailTestId={ emailTestId }\r\n              setStateEmail={ setStateEmail }\r\n              title={ title }\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <PasswordInput\r\n              passwordTestId={ passwordTestId }\r\n              setStatePassword={ setStatePassword }\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"d-flex justify-content-center\">\r\n            <Button\r\n              variant=\"success\"\r\n              data-testid=\"common_register__button-register\"\r\n              disabled={ disabled }\r\n              onClick={ createUser }\r\n              type=\"button\"\r\n            >\r\n              Cadastrar\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col>\r\n            <RegisterErrorMessage hidden={ hidden } />\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { useHistory } from 'react-router';\r\nimport { ShoppingCartOutlined } from '@ant-design/icons';\r\nimport './css/shoppingCart.css';\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nfunction CartTotal({ cartTotal }) {\r\n  const history = useHistory();\r\n  const redirectToCart = () => history.push('/customer/checkout');\r\n  return (\r\n    <Nav.Link href=\"/customer/checkout\">\r\n      <div\r\n        className=\"container-test\"\r\n        data-testid=\"customer_products__checkout-bottom-value\"\r\n        disabled={ cartTotal <= 0 }\r\n      >\r\n        <ShoppingCartOutlined style={ { fontSize: '2.5rem' } } />\r\n        <button\r\n          type=\"button\"\r\n          data-testid=\"customer_products__button-cart\"\r\n          className=\"clear-button-style price-tag\"\r\n          disabled={ cartTotal <= 0 }\r\n          onClick={ redirectToCart }\r\n        >\r\n          { ` ${cartTotal.toFixed(2).toString().split('.').join(',')}` }\r\n        </button>\r\n\r\n      </div>\r\n    </Nav.Link>\r\n  );\r\n}\r\n\r\nCartTotal.propTypes = {\r\n  cartTotal: Proptypes.number.isRequired,\r\n};\r\n\r\nexport default CartTotal;\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\nimport React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport './css/hamburgerButton.css';\r\n\r\n// https://github.com/codeSTACKr/hamburger-animation\r\nfunction HamburgerButton({ openMenu, setOpenMenu }) {\r\n  return (\r\n    <div\r\n      className={ `${openMenu && 'open'} menu-btn` }\r\n      onClick={ () => setOpenMenu(!openMenu) }\r\n    >\r\n      <div className=\"menu-btn__burger\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nHamburgerButton.propTypes = {\r\n  setOpenMenu: Proptypes.func.isRequired,\r\n  openMenu: Proptypes.bool.isRequired,\r\n};\r\n\r\nexport default HamburgerButton;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport './css/sideNav.css';\r\n\r\n// https://github.com/codeSTACKr/hamburger-animation\r\nfunction SideNav({ openMenu, setOpenMenu, logout, name }) {\r\n  const openMenuWithWidth = openMenu ? '250px' : '0px';\r\n\r\n  return (\r\n    <div id=\"mySidenav\" className=\"sidenav\" style={ { width: openMenuWithWidth } }>\r\n      <button\r\n        type=\"button\"\r\n        className=\"closebtn clear-button-style\"\r\n        onClick={ () => setOpenMenu(!openMenu) }\r\n      >\r\n        &times;\r\n      </button>\r\n      <span>{name}</span>\r\n\r\n      <button\r\n        className=\"clear-button-style\"\r\n        onClick={ logout }\r\n        data-testid=\"customer_products__element-navbar-link-logout\"\r\n        type=\"button\"\r\n      >\r\n        Sair\r\n      </button>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nSideNav.propTypes = {\r\n  setOpenMenu: Proptypes.func.isRequired,\r\n  logout: Proptypes.func.isRequired,\r\n  openMenu: Proptypes.bool.isRequired,\r\n  name: Proptypes.string.isRequired,\r\n};\r\n\r\nexport default SideNav;\r\n","import { useEffect, useState } from 'react';\n\n// https://usehooks.com/useWindowSize/\n\n// Hook\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\nexport default useWindowSize;\n","/* eslint-disable react/jsx-max-depth */\r\nimport React, { useState } from 'react';\r\nimport { Container, Image, Nav, Navbar, Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\nimport Proptypes from 'prop-types';\r\nimport CartTotal from './CartTotal';\r\nimport HamburgerButton from './HamburgerButton';\r\nimport SideNav from './SideNav';\r\nimport useWindowSize from '../../helpers/getWindowSize';\r\n\r\nfunction TopBar({ cartTotal }) {\r\n  const { name } = JSON.parse(localStorage.getItem('user'));\r\n  const history = useHistory();\r\n  const onSellerPage = history.location.pathname.includes('/seller');\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n  const { width } = useWindowSize();\r\n\r\n  const showMobileMenuWidth = 800;\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <Navbar sticky=\"top\" bg=\"light\" expand=\"md\" style={ { flexWrap: 'nowrap' } }>\r\n      <SideNav\r\n        setOpenMenu={ setOpenMenu }\r\n        openMenu={ openMenu }\r\n        logout={ logout }\r\n        name={ name }\r\n      />\r\n      <Container\r\n        className=\"d-flex\"\r\n        style={ { padding: 0 } }\r\n      >\r\n        <Container className=\"d-flex\" style={ { padding: 0 } }>\r\n          <Nav\r\n            className=\"me-auto my-2 my-lg-0 flex-row align-items-center\"\r\n            navbarScroll\r\n          >\r\n            <Navbar.Brand>\r\n              <Image\r\n                src=\"/images/logo.svg\"\r\n                width=\"50\"\r\n                height=\"40\"\r\n                alt=\"Disk Birita logo\"\r\n              />\r\n            </Navbar.Brand>\r\n\r\n            <Nav.Link\r\n              href={ onSellerPage ? '/seller/orders' : '/customer/products' }\r\n              data-testid={ `customer_products__element-navbar-link-${\r\n                onSellerPage ? 'orders' : 'products'\r\n              }` }\r\n              style={ { marginRight: '10px' } }\r\n            >\r\n              { onSellerPage ? 'ORDERS' : 'PRODUTOS' }\r\n            </Nav.Link>\r\n            {!onSellerPage\r\n              && (\r\n                <Nav.Link\r\n                  href=\"/customer/orders\"\r\n                  data-testid=\"customer_products__element-navbar-link-orders\"\r\n                >\r\n                  PEDIDOS\r\n                </Nav.Link>\r\n              )}\r\n          </Nav>\r\n          {width >= showMobileMenuWidth\r\n          && (\r\n            <Container\r\n              className=\"d-flex justify-content-end align-items-center\"\r\n            >\r\n              <Navbar.Text\r\n                data-testid=\"customer_products__element-navbar-user-full-name\"\r\n                href=\"/customer/orders\"\r\n                style={ { marginRight: '10px' } }\r\n              >\r\n                { name }\r\n              </Navbar.Text>\r\n              <Button\r\n                onClick={ logout }\r\n                data-testid=\"customer_products__element-navbar-link-logout\"\r\n                type=\"button\"\r\n              >\r\n                Sair\r\n              </Button>\r\n            </Container>)}\r\n          {!onSellerPage && <CartTotal cartTotal={ cartTotal } />}\r\n          {width < showMobileMenuWidth\r\n        && <HamburgerButton setOpenMenu={ setOpenMenu } openMenu={ openMenu } />}\r\n        </Container>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nTopBar.propTypes = {\r\n  cartTotal: Proptypes.number,\r\n};\r\n\r\nTopBar.defaultProps = {\r\n  cartTotal: 0,\r\n};\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Button, Card, Form, InputGroup } from 'react-bootstrap';\r\n\r\nfunction ProductCard(props) {\r\n  const { product, product: { id, name, price, urlImage, quantity },\r\n    setCart, cart } = props;\r\n  const addOne = (cardId) => {\r\n    const elementId = `input-${cardId}`;\r\n    const input = document.getElementById(elementId);\r\n    const regex = /^[0-9\\b]+$/;\r\n    if (regex.test(input.value)) {\r\n      input.value = parseInt(input.value, 10) + 1;\r\n    } else {\r\n      input.value = 1;\r\n    }\r\n    const indexOfProduct = cart.indexOf(product);\r\n    const newCart = [...cart];\r\n    newCart[indexOfProduct] = {\r\n      id,\r\n      price,\r\n      quantity: parseInt(input.value, 10),\r\n      name,\r\n      urlImage,\r\n    };\r\n    setCart(newCart);\r\n  };\r\n\r\n  const removeOne = (cardId) => {\r\n    const elementId = `input-${cardId}`;\r\n    const input = document.getElementById(elementId);\r\n    const regex = /^[0-9\\b]+$/;\r\n\r\n    if ((regex.test(input.value)) && (parseInt(input.value, 10) > 0)) {\r\n      input.value = parseInt(input.value, 10) - 1;\r\n    } else {\r\n      input.value = 0;\r\n    }\r\n    const indexOfProduct = cart.indexOf(product);\r\n    const newCart = [...cart];\r\n    newCart[indexOfProduct] = {\r\n      id,\r\n      price,\r\n      quantity: parseInt(input.value, 10),\r\n      name,\r\n      urlImage,\r\n    };\r\n    setCart(newCart);\r\n  };\r\n\r\n  const changeCart = (cardId, value) => {\r\n    let inputValue = value;\r\n    const idArray = cardId.split('-')[1] - 1;\r\n    if (!value) {\r\n      inputValue = 0;\r\n    }\r\n\r\n    const newCart = [...cart];\r\n    newCart[idArray] = {\r\n      id,\r\n      price,\r\n      quantity: parseInt(inputValue, 10),\r\n      name,\r\n      urlImage,\r\n    };\r\n    setCart(newCart);\r\n  };\r\n\r\n  return (\r\n\r\n    <Card>\r\n      <Card.Img\r\n        data-testid={ `customer_products__img-card-bg-image-${id}` }\r\n        variant=\"top\"\r\n        src={ urlImage }\r\n        style={ { heigth: '100px' } }\r\n      />\r\n      <Card.Title\r\n        data-testid={ `customer_products__element-card-title-${id}` }\r\n        style={ {\r\n          whiteSpace: 'nowrap',\r\n          overflow: 'hidden',\r\n          textOverflow: 'ellipsis',\r\n          textAlign: 'center',\r\n        } }\r\n      >\r\n        { name }\r\n      </Card.Title>\r\n      <Card.Text style={ { textAlign: 'center' } }>\r\n        R$\r\n        <span\r\n          data-testid={ `customer_products__element-card-price-${id}` }\r\n        >\r\n          { price.toString().split('.').join(',') }\r\n        </span>\r\n      </Card.Text>\r\n      <InputGroup className=\"d-flex justify-content-center\">\r\n        <Button\r\n          id={ id }\r\n          data-testid={ `customer_products__button-card-rm-item-${id}` }\r\n          variant=\"success\"\r\n          onClick={ (e) => removeOne(e.target.id) }\r\n        >\r\n          -\r\n        </Button>\r\n        <Form.Control\r\n          as=\"input\"\r\n          min=\"0\"\r\n          max=\"99\"\r\n          id={ `input-${id}` }\r\n          data-testid={ `customer_products__input-card-quantity-${id}` }\r\n          onChange={ (e) => {\r\n            changeCart(e.target.id, e.target.value);\r\n          } }\r\n          type=\"integer\"\r\n          placeholder=\"0\"\r\n          defaultValue={ quantity }\r\n          style={ { maxWidth: '176px' } }\r\n        />\r\n        <Button\r\n          id={ id }\r\n          data-testid={ `customer_products__button-card-add-item-${id}` }\r\n          onClick={ (e) => addOne(e.target.id) }\r\n          variant=\"success\"\r\n        >\r\n          +\r\n        </Button>\r\n      </InputGroup>\r\n    </Card>\r\n\r\n  );\r\n}\r\n\r\nProductCard.propTypes = {\r\n  product: Proptypes.shape({\r\n    id: Proptypes.number,\r\n    quantity: Proptypes.number,\r\n    name: Proptypes.string,\r\n    price: Proptypes.string,\r\n    urlImage: Proptypes.string,\r\n  }).isRequired,\r\n  setCart: Proptypes.func.isRequired,\r\n  cart: Proptypes.arrayOf(Proptypes.object).isRequired,\r\n};\r\n\r\nexport default ProductCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport TopBar from '../components/navigation_bar/TopBar';\r\nimport ProductCard from '../components/ProductCard';\r\nimport { serverUrl } from '../helpers/constants';\r\n\r\nfunction Products() {\r\n  const [cart, setCart] = useState();\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const getProducts = async () => {\r\n      const response = await axios.get(`${serverUrl}/products`);\r\n      const productsWithQuantity = response.data.map((e) => {\r\n        e.quantity = 0;\r\n        return e;\r\n      });\r\n      setCart(productsWithQuantity);\r\n    };\r\n    getProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let sum = 0;\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n    if (cart) {\r\n      cart.forEach((element) => {\r\n        sum += element.price * element.quantity;\r\n      });\r\n    }\r\n    setCartTotal(sum);\r\n  }, [cart]);\r\n\r\n  return (\r\n    <>\r\n      <TopBar cartTotal={ cartTotal } />\r\n      <Container>\r\n        <Row xs={ 2 } md={ 3 } sm={ 2 } className=\"g-4\">\r\n          {\r\n            cart && cart.map((product, index) => (\r\n              <ProductCard\r\n                product={ product }\r\n                setCart={ setCart }\r\n                cart={ cart }\r\n                key={ index }\r\n              />\r\n            ))\r\n          }\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Products;\r\n","/* eslint-disable react/prop-types */\r\n// https://stackoverflow.com/questions/47476186/when-user-is-not-logged-in-redirect-to-login-reactjs\r\nimport React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const isLoggedIn = localStorage.getItem('user');\r\n  return (\r\n    <Route\r\n      { ...rest }\r\n      render={ (props) => (isLoggedIn ? (\r\n        <Component { ...props } />\r\n      ) : (\r\n        <Redirect to={ { pathname: '/login', state: { from: props.location } } } />\r\n      )) }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n\r\nPrivateRoute.propTypes = {\r\n  component: Proptypes.func.isRequired,\r\n  location: Proptypes.shape({}),\r\n};\r\n\r\nPrivateRoute.defaultProps = {\r\n  location: {},\r\n};\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Table } from 'react-bootstrap';\r\nimport './css/checkoutProductTable.css';\r\n\r\nfunction CheckoutProductTable(props) {\r\n  const { cartTotal, setCart, cart } = props;\r\n\r\n  const removeItem = (productIndex) => {\r\n    const newCart = [...cart];\r\n    newCart.splice(productIndex, 1);\r\n    return setCart(newCart);\r\n  };\r\n\r\n  return (\r\n    <Table responsive hover className=\"table-format\">\r\n      <thead>\r\n        <tr>\r\n          <th>Item</th>\r\n          <th>Descrição</th>\r\n          <th>Quantidade</th>\r\n          <th>Valor Unitário</th>\r\n          <th>Sub-total</th>\r\n          <th>Remover Item</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          cart && cart.map(({ id, name, price, quantity }, index) => (\r\n            <tr key={ id }>\r\n              <td\r\n                data-testid={\r\n                  `customer_checkout__element-order-table-item-number-${index}`\r\n                }\r\n              >\r\n                { index + 1 }\r\n              </td>\r\n              <td\r\n                data-testid={ `customer_checkout__element-order-table-name-${index}` }\r\n              >\r\n                { name }\r\n              </td>\r\n              <td\r\n                data-testid={ `customer_checkout__element-order-table-quantity-${index}` }\r\n              >\r\n                { quantity }\r\n              </td>\r\n              <td\r\n                data-testid={\r\n                  `customer_checkout__element-order-table-unit-price-${index}`\r\n                }\r\n              >\r\n                {`R$${price.toString().split('.').join(',')}`}\r\n              </td>\r\n              <td>\r\n                R$\r\n                <span\r\n                  data-testid={\r\n                    `customer_checkout__element-order-table-sub-total-${index}`\r\n                  }\r\n                >\r\n                  { (price * quantity).toFixed(2).toString().split('.').join(',') }\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  id={ id }\r\n                  data-testid={ `customer_checkout__element-order-table-remove-${index}` }\r\n                  onClick={ () => removeItem(index) }\r\n                  type=\"button\"\r\n                  className=\"clear-button-style\"\r\n                >\r\n                  Remover\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))\r\n        }\r\n        <tr>\r\n          <td className=\"total-price\" colSpan=\"6\">\r\n            {`Total: R$${cartTotal.toFixed(2).toString().split('.').join(',')}`}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nCheckoutProductTable.propTypes = {\r\n  setCart: Proptypes.func.isRequired,\r\n  cart: Proptypes.arrayOf(Proptypes.object),\r\n  cartTotal: Proptypes.number.isRequired,\r\n};\r\n\r\nCheckoutProductTable.defaultProps = {\r\n  cart: [],\r\n};\r\n\r\nexport default CheckoutProductTable;\r\n","import React from 'react';\r\nimport { Container, Dropdown, Form } from 'react-bootstrap';\r\nimport Proptypes from 'prop-types';\r\n\r\nfunction CheckoutDeliveryData(props) {\r\n  const { finishSale, setDeliveryAddress, setDeliveryNumber, setSellerId,\r\n    sellers } = props;\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"d-flex\">\r\n        {/* title */}\r\n        <Dropdown>\r\n          <div>\r\n            <span>\r\n              P. Vendedora Responsável:\r\n            </span>\r\n          </div>\r\n\r\n          <select\r\n            onChange={ (e) => setSellerId(e.target.value) }\r\n            name=\"select\"\r\n            data-testid=\"customer_checkout__select-seller\"\r\n            defaultValue=\"DEFAULT\"\r\n          >\r\n            <option disabled value=\"DEFAULT\"> -- Selecione -- </option>\r\n            {sellers.map((\r\n              { id, name }, index,\r\n            ) => (<option key={ index } value={ id } defaultValue>{name}</option>))}\r\n          </select>\r\n        </Dropdown>\r\n        <Form.Label>\r\n          Endereço\r\n          <Form.Control\r\n            placeholder=\"Travessa Terceira da Castanheira, Bairro Murici\"\r\n            type=\"text\"\r\n            data-testid=\"customer_checkout__input-address\"\r\n            onChange={ (e) => {\r\n              setDeliveryAddress(e.target.value);\r\n            } }\r\n          />\r\n        </Form.Label>\r\n        <Form.Label>\r\n          Número\r\n          <Form.Control\r\n            placeholder=\"198\"\r\n            data-testid=\"customer_checkout__input-addressNumber\"\r\n            type=\"number\"\r\n            onChange={ (e) => {\r\n              setDeliveryNumber(e.target.value);\r\n            } }\r\n          />\r\n        </Form.Label>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        data-testid=\"customer_checkout__button-submit-order\"\r\n        // disabled={ cartTotal <= 0 }\r\n        onClick={ finishSale }\r\n      >\r\n        FINALIZAR PEDIDO\r\n      </button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CheckoutDeliveryData;\r\n\r\nCheckoutDeliveryData.propTypes = {\r\n  finishSale: Proptypes.func.isRequired,\r\n  setDeliveryNumber: Proptypes.func.isRequired,\r\n  setDeliveryAddress: Proptypes.func.isRequired,\r\n  setSellerId: Proptypes.func.isRequired,\r\n  sellers: Proptypes.arrayOf(Object).isRequired,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport axios from 'axios';\r\nimport { Container } from 'react-bootstrap';\r\nimport TopBar from '../components/navigation_bar/TopBar';\r\nimport CheckoutProductTable from '../components/checkout_cart/CheckoutProductTable';\r\nimport CheckoutDeliveryData from '../components/checkout_cart/CheckoutDeliveryData';\r\nimport { serverUrl } from '../helpers/constants';\r\n\r\nfunction Products() {\r\n  const history = useHistory();\r\n  const [cart, setCart] = useState();\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [deliveryAddress, setDeliveryAddress] = useState('');\r\n  const [deliveryNumber, setDeliveryNumber] = useState('');\r\n  const [sellerId, setSellerId] = useState();\r\n  const [sellers, setSellers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getLocalStorageCartItens = async () => {\r\n      const localCart = JSON.parse(localStorage.getItem('cart'));\r\n      const olyItensInCart = localCart.filter((e) => e.quantity > 0);\r\n      setCart(olyItensInCart);\r\n    };\r\n    getLocalStorageCartItens();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getSellers = async () => {\r\n      const { data } = await axios.get(`${serverUrl}/seller/all`);\r\n      setSellers(data);\r\n    };\r\n    getSellers();\r\n  }, [setSellers]);\r\n\r\n  useEffect(() => {\r\n    let sum = 0;\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n    if (cart) {\r\n      cart.forEach((element) => {\r\n        sum += element.price * element.quantity;\r\n      });\r\n    }\r\n    setCartTotal(sum);\r\n  }, [cart]);\r\n\r\n  const finishSale = async () => {\r\n    try {\r\n      const { token } = JSON.parse(localStorage.getItem('user'));\r\n      const config = {\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n      };\r\n      const newSale = {\r\n        totalPrice: cartTotal,\r\n        products: cart,\r\n        deliveryAddress,\r\n        deliveryNumber,\r\n        sellerId,\r\n      };\r\n\r\n      const { data: { saleId } } = await axios.post(\r\n        `${serverUrl}/customer/checkout`, newSale, config,\r\n      );\r\n      history.push(`/customer/orders/${saleId}`);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopBar cartTotal={ cartTotal } />\r\n      <Container>\r\n        <CheckoutProductTable cart={ cart } setCart={ setCart } cartTotal={ cartTotal } />\r\n        <div>Detalhes e Endereço para Entrega</div>\r\n        <CheckoutDeliveryData\r\n          setDeliveryNumber={ setDeliveryNumber }\r\n          setDeliveryAddress={ setDeliveryAddress }\r\n          finishSale={ finishSale }\r\n          setSellerId={ setSellerId }\r\n          sellers={ sellers }\r\n        />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\nexport default Products;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Table } from 'react-bootstrap';\r\nimport './css/OrderDetailsTable.css';\r\n\r\nfunction OrderDetailsTable({ products, totalPrice }) {\r\n  return (\r\n    <Table responsive hover className=\"table-format\">\r\n      <thead>\r\n        <tr>\r\n          <th>Item</th>\r\n          <th>Descrição</th>\r\n          <th>Quantidade</th>\r\n          <th>Valor unitário</th>\r\n          <th>Sub-total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        { products.map((entry) => (\r\n          <tr key={ entry.id }>\r\n            <td\r\n              data-testid={\r\n                `customer_order_details__element-order-table-item-number-${entry.id}`\r\n              }\r\n            >\r\n              { entry.id }\r\n            </td>\r\n            <td\r\n              data-testid={\r\n                `customer_order_details__element-order-table-name-${entry.id}`\r\n              }\r\n            >\r\n              { entry.name }\r\n            </td>\r\n            <td\r\n              data-testid={\r\n                `customer_order_details__element-order-table-quantity-${entry.id}`\r\n              }\r\n            >\r\n              { entry.SalesProduct.quantity }\r\n            </td>\r\n            <td\r\n              data-testid={\r\n                `customer_order_details__element-order-table-sub-total-${entry.id}`\r\n              }\r\n            >\r\n              R$\r\n              { entry.price.split('.').join(',') }\r\n            </td>\r\n            <td>\r\n              R$\r\n              {\r\n                (parseFloat(entry.price)\r\n              * entry.SalesProduct.quantity).toFixed(2).split('.').join(',')\r\n              }\r\n            </td>\r\n          </tr>\r\n        ))}\r\n        <tr>\r\n          <td\r\n            colSpan=\"5\"\r\n            data-testid=\"customer_order_details__element-order-total-price\"\r\n            className=\"total-price\"\r\n          >\r\n            { `Total: R$${totalPrice.split('.').join(',')}` }\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nOrderDetailsTable.propTypes = {\r\n  products: Proptypes.arrayOf(Proptypes.any).isRequired,\r\n  totalPrice: Proptypes.string.isRequired,\r\n};\r\n\r\nexport default OrderDetailsTable;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Table } from 'react-bootstrap';\r\nimport './css/OrderDetailsTable.css';\r\n\r\nfunction OrderStatusHeader({ updateButtonsText, orderId,\r\n  sellerName, orderStatus, saleDate }) {\r\n  const endArraySlice = 4;\r\n  const dateArray = saleDate.split('-');\r\n  const day = `${dateArray[2][0]}${dateArray[2][1]}`;\r\n  const month = `${dateArray[1][0]}${dateArray[1][1]}`;\r\n  const year = `${dateArray[0].slice(0, endArraySlice)}`;\r\n  const formattedDate = `${day}/${month}/${year}`;\r\n  const label = 'customer_order_details__element-order-details-label-delivery-status';\r\n\r\n  const tyTrybe = 'customer_order_details__element-order-details-label-seller-name';\r\n  const s2BigNames = 'customer_order_details__element-order-details-label-order-date';\r\n\r\n  return (\r\n    <Table responsive hover className=\"table-format\">\r\n      <thead>\r\n        <tr>\r\n          <th\r\n            data-testid=\"customer_order_details__element-order-details-label-order-id\"\r\n          >\r\n            { `Pedido ${orderId}` }\r\n          </th>\r\n          <th\r\n            data-testid={ tyTrybe }\r\n          >\r\n            { `P. Vend: ${sellerName}` }\r\n          </th>\r\n          <th\r\n            data-testid={ s2BigNames }\r\n          >\r\n            { formattedDate }\r\n          </th>\r\n          <th\r\n            data-testid={ label }\r\n          >\r\n            { orderStatus }\r\n          </th>\r\n          <th>\r\n            <button\r\n              data-testid=\"customer_order_details__button-delivery-check\"\r\n              type=\"button\"\r\n              disabled={ orderStatus !== 'Em Trânsito' }\r\n              onClick={ () => updateButtonsText('Entregue') }\r\n            >\r\n              MARCAR COMO ENTREGUE\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n    </Table>\r\n  );\r\n}\r\n\r\nOrderStatusHeader.propTypes = {\r\n  updateButtonsText: Proptypes.func.isRequired,\r\n  orderId: Proptypes.string.isRequired,\r\n  sellerName: Proptypes.string.isRequired,\r\n  orderStatus: Proptypes.string.isRequired,\r\n  saleDate: Proptypes.string.isRequired,\r\n};\r\n\r\nexport default OrderStatusHeader;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport './css/OrderDetailsTable.css';\r\n\r\nfunction CardOrderStatusHeader({ updateButtonsText, orderId,\r\n  sellerName, orderStatus, saleDate }) {\r\n    \r\n  const endArraySlice = 4;\r\n  const dateArray = saleDate.split('-');\r\n  const day = `${dateArray[2][0]}${dateArray[2][1]}`;\r\n  const month = `${dateArray[1][0]}${dateArray[1][1]}`;\r\n  const year = `${dateArray[0].slice(0, endArraySlice)}`;\r\n  const formattedDate = `${day}/${month}/${year}`;\r\n  const label = 'customer_order_details__element-order-details-label-delivery-status';\r\n\r\n  const tyTrybe = 'customer_order_details__element-order-details-label-seller-name';\r\n  const s2BigNames = 'customer_order_details__element-order-details-label-order-date';\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Text\r\n          data-testid=\"customer_order_details__element-order-details-label-order-id\"\r\n        >\r\n          { `Pedido ${orderId}` }\r\n        </Card.Text>\r\n        <Card.Text data-testid={ tyTrybe }>\r\n          { `P. Vend: ${sellerName}` }\r\n        </Card.Text>\r\n        <Card.Text data-testid={ s2BigNames }>\r\n          { formattedDate }\r\n        </Card.Text>\r\n        <Card.Text data-testid={ label }>\r\n          { orderStatus }\r\n        </Card.Text>\r\n        <Card.Text />\r\n        <Button\r\n          type=\"button\"\r\n          disabled={ orderStatus !== 'Em Trânsito' }\r\n          onClick={ () => updateButtonsText('Entregue') }\r\n        >\r\n          MARCAR COMO ENTREGUE\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nCardOrderStatusHeader.propTypes = {\r\n  updateButtonsText: Proptypes.func.isRequired,\r\n  orderId: Proptypes.number.isRequired,\r\n  sellerName: Proptypes.string.isRequired,\r\n  orderStatus: Proptypes.string.isRequired,\r\n  saleDate: Proptypes.string.isRequired,\r\n};\r\n\r\nexport default CardOrderStatusHeader;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Table } from 'react-bootstrap';\r\nimport './css/OrderDetailsTable.css';\r\n\r\nfunction OrderDetailsTable({ products, totalPrice }) {\r\n  return (\r\n    <Table responsive hover className=\"table-format\">\r\n      <thead>\r\n        <tr>\r\n          <th>Item</th>\r\n          <th>Descrição</th>\r\n          <th>Quantidade</th>\r\n          <th>Valor unitário</th>\r\n          <th>Sub-total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        { products.map((entry) => (\r\n          <tr key={ entry.id }>\r\n            <td\r\n              data-testid={\r\n                `customer_order_details__element-order-table-item-number-${entry.id}`\r\n              }\r\n            >\r\n              { entry.id }\r\n            </td>\r\n            <td\r\n              data-testid={\r\n                `customer_order_details__element-order-table-name-${entry.id}`\r\n              }\r\n            >\r\n              { entry.name }\r\n            </td>\r\n            <td\r\n              data-testid={\r\n                `customer_order_details__element-order-table-quantity-${entry.id}`\r\n              }\r\n            >\r\n              { entry.SalesProduct.quantity }\r\n            </td>\r\n            <td\r\n              data-testid={\r\n                `customer_order_details__element-order-table-sub-total-${entry.id}`\r\n              }\r\n            >\r\n              R$\r\n              { entry.price.split('.').join(',') }\r\n            </td>\r\n            <td>\r\n              R$\r\n              {\r\n                (parseFloat(entry.price)\r\n              * entry.SalesProduct.quantity).toFixed(2).split('.').join(',')\r\n              }\r\n            </td>\r\n          </tr>\r\n        ))}\r\n        <tr>\r\n          <td\r\n            colSpan=\"5\"\r\n            data-testid=\"customer_order_details__element-order-total-price\"\r\n            className=\"total-price\"\r\n          >\r\n            { `Total: R$${totalPrice.split('.').join(',')}` }\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nOrderDetailsTable.propTypes = {\r\n  products: Proptypes.arrayOf(Proptypes.any).isRequired,\r\n  totalPrice: Proptypes.string.isRequired,\r\n};\r\n\r\nexport default OrderDetailsTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Container } from 'react-bootstrap';\r\nimport TopBar from '../components/navigation_bar/TopBar';\r\nimport OrderDetailsTable from '../components/order_details/OrderDetailsTable';\r\nimport { serverUrl } from '../helpers/constants';\r\nimport OrderStatusHeader from '../components/order_details/OrderStatusHeader';\r\nimport useWindowSize from '../helpers/getWindowSize';\r\nimport CardOrderStatusHeader from '../components/order_details/CardOrderStatusHeader';\r\nimport CardOrderDetailsTable from '../components/order_details/CardOrderDetailsTable';\r\n\r\nfunction Products() {\r\n  const [preparing, setPreparing] = useState(false);\r\n  const [orderStatus, setOrderStatus] = useState('Pendente');\r\n  const [order, setOrder] = useState();\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const history = useHistory();\r\n  const { width } = useWindowSize();\r\n  const minWidthToShow = 800;\r\n  const showMobileCards = width < minWidthToShow;\r\n\r\n  useEffect(() => {\r\n    const historyArray = history.location.pathname.split('/');\r\n    const orderId = historyArray[historyArray.length - 1];\r\n    const { token } = JSON.parse(localStorage.getItem('user'));\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const getOrder = async () => {\r\n      const myOrder = await axios.get(`${serverUrl}/customer/order/${orderId}`, config);\r\n      setOrder(myOrder.data.order);\r\n      setOrderStatus(myOrder.data.order.status);\r\n    };\r\n\r\n    getOrder();\r\n  }, [history.location.pathname]);\r\n\r\n  const updateButtonsText = async (status) => {\r\n    const historyArray = history.location.pathname.split('/');\r\n    const orderId = historyArray[historyArray.length - 1];\r\n    const { token } = JSON.parse(localStorage.getItem('user'));\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    axios.post(`${serverUrl}/seller/orders/${orderId}`, { orderStatus: status }, config);\r\n\r\n    setPreparing(!preparing);\r\n    setOrderStatus(status);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sum = 0;\r\n    const cart = JSON.parse(localStorage.getItem('cart'));\r\n    if (cart) {\r\n      cart.forEach((element) => {\r\n        sum += element.price * element.quantity;\r\n      });\r\n    }\r\n    setCartTotal(sum);\r\n  }, []);\r\n\r\n  if (showMobileCards) {\r\n    return (\r\n      <>\r\n        <TopBar cartTotal={ cartTotal } />\r\n        {order\r\n        && (\r\n          <Container>\r\n            <p>Detalhe do pedido</p>\r\n            <CardOrderStatusHeader\r\n              orderId={ order.id }\r\n              sellerName={ order.seller.name }\r\n              orderStatus={ orderStatus }\r\n              updateButtonsText={ updateButtonsText }\r\n              saleDate={ order.saleDate }\r\n            />\r\n            <CardOrderDetailsTable\r\n              products={ order.products }\r\n              totalPrice={ order.totalPrice }\r\n            />\r\n          </Container>)}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TopBar cartTotal={ cartTotal } />\r\n      {order\r\n      && (\r\n        <Container>\r\n          <p>Detalhe do pedido</p>\r\n          <OrderStatusHeader\r\n            orderId={ order.id }\r\n            sellerName={ order.seller.name }\r\n            orderStatus={ orderStatus }\r\n            updateButtonsText={ updateButtonsText }\r\n            saleDate={ order.saleDate }\r\n          />\r\n          <OrderDetailsTable\r\n            products={ order.products }\r\n            totalPrice={ order.totalPrice }\r\n          />\r\n        </Container>)}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Products;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Table } from 'react-bootstrap';\r\nimport './css/OrderDetailsTable.css';\r\n\r\nfunction SellerOrderDetailsTable({ products, totalPrice }) {\r\n  return (\r\n    <Table responsive hover className=\"table-format\">\r\n      <thead>\r\n        <tr>\r\n          <th>Item</th>\r\n          <th>Descrição</th>\r\n          <th>Quantidade</th>\r\n          <th>Valor unitário</th>\r\n          <th>Sub-total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        { products.map((entry) => (\r\n          <tr key={ entry.id }>\r\n            <td\r\n              data-testid={\r\n                `seller_order_details__element-order-table-item-number-${entry.id}`\r\n              }\r\n            >\r\n              { entry.id }\r\n            </td>\r\n            <td\r\n              data-testid={\r\n                `seller_order_details__element-order-table-name--${entry.id}`\r\n              }\r\n            >\r\n              { entry.name }\r\n            </td>\r\n            <td\r\n              data-testid={\r\n                `seller_order_details__element-order-table-quantity-${entry.id}`\r\n              }\r\n            >\r\n              { entry.SalesProduct.quantity }\r\n            </td>\r\n            <td\r\n              data-testid={\r\n                `seller_order_details__element-order-table-unit-price-${entry.id}`\r\n              }\r\n            >\r\n              R$\r\n              { entry.price.split('.').join(',') }\r\n            </td>\r\n            <td\r\n              data-testid={\r\n                `seller_order_details__element-order-table-sub-total${entry}`\r\n              }\r\n            >\r\n              R$\r\n              {\r\n                (parseFloat(entry.price)\r\n              * entry.SalesProduct.quantity).toFixed(2).split('.').join(',')\r\n              }\r\n            </td>\r\n          </tr>\r\n        ))}\r\n        <tr>\r\n          <td\r\n            colSpan=\"5\"\r\n            data-testid=\"seller_order_details__element-order-total-price\"\r\n            className=\"total-price\"\r\n          >\r\n            { `Total: R$${totalPrice.split('.').join(',')}` }\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nSellerOrderDetailsTable.propTypes = {\r\n  products: Proptypes.arrayOf(Proptypes.any).isRequired,\r\n  totalPrice: Proptypes.string.isRequired,\r\n};\r\n\r\nexport default SellerOrderDetailsTable;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Table } from 'react-bootstrap';\r\nimport './css/OrderDetailsTable.css';\r\n\r\nfunction SellerOrderStatusHeader({ updateButtonsText, orderId,\r\n  orderStatus, saleDate }) {\r\n  const endArraySlice = 4;\r\n  const dateArray = saleDate.split('-');\r\n  const day = `${dateArray[2][0]}${dateArray[2][1]}`;\r\n  const month = `${dateArray[1][0]}${dateArray[1][1]}`;\r\n  const year = `${dateArray[0].slice(0, endArraySlice)}`;\r\n  const formattedDate = `${day}/${month}/${year}`;\r\n  const label = 'seller_order_details__element-order-details-label-delivery-status';\r\n  const s2BigNames = 'seller_order_details__element-order-details-label-order-date';\r\n\r\n  return (\r\n    <Table responsive hover className=\"table-head-format\">\r\n      <tr>\r\n        <th\r\n          data-testid=\"seller_order_details__element-order-details-label-order-id\"\r\n        >\r\n          { `Pedido ${orderId}` }\r\n        </th>\r\n        <th\r\n          data-testid={ s2BigNames }\r\n        >\r\n          { formattedDate }\r\n        </th>\r\n        <th\r\n          data-testid={ label }\r\n        >\r\n          { orderStatus }\r\n        </th>\r\n        <th>\r\n          <button\r\n            data-testid=\"seller_order_details__button-preparing-check\"\r\n            type=\"button\"\r\n            disabled={ orderStatus !== 'Pendente' }\r\n            onClick={ () => updateButtonsText('Preparando') }\r\n          >\r\n            PREPARAR PEDIDO\r\n          </button>\r\n        </th>\r\n        <th>\r\n          <button\r\n            data-testid=\"seller_order_details__button-dispatch-check\"\r\n            type=\"button\"\r\n            disabled={ orderStatus !== 'Preparando' }\r\n            onClick={ () => updateButtonsText('Em Trânsito') }\r\n          >\r\n            SAIU PARA ENTREGA\r\n          </button>\r\n        </th>\r\n      </tr>\r\n    </Table>\r\n  );\r\n}\r\n\r\nSellerOrderStatusHeader.propTypes = {\r\n  updateButtonsText: Proptypes.func.isRequired,\r\n  orderId: Proptypes.string.isRequired,\r\n  orderStatus: Proptypes.string.isRequired,\r\n  saleDate: Proptypes.string.isRequired,\r\n};\r\n\r\nexport default SellerOrderStatusHeader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Container } from 'react-bootstrap';\r\nimport TopBar from '../components/navigation_bar/TopBar';\r\nimport SellerOrderDetailsTable from '../components/order_details/SellerOrderDetailsTable';\r\nimport SellerOrderStatusHeader from '../components/order_details/SellerOrderStatusHeader';\r\nimport { serverUrl } from '../helpers/constants';\r\n\r\nfunction ListSellerSaleById() {\r\n  const [order, setOrder] = useState();\r\n  const [preparing, setPreparing] = useState(false);\r\n  const [orderStatus, setOrderStatus] = useState('Pendente');\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const historyArray = history.location.pathname.split('/');\r\n    const orderId = historyArray[historyArray.length - 1];\r\n    const { token } = JSON.parse(localStorage.getItem('user'));\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const getOrder = async () => {\r\n      const myOrder = await axios.get(`${serverUrl}/seller/orders/${orderId}`, config);\r\n\r\n      setOrder(myOrder.data.order);\r\n      setOrderStatus(myOrder.data.order.status);\r\n    };\r\n\r\n    getOrder();\r\n  }, [history.location.pathname]);\r\n\r\n  const updateButtonsText = async (status) => {\r\n    const historyArray = history.location.pathname.split('/');\r\n    const orderId = historyArray[historyArray.length - 1];\r\n    const { token } = JSON.parse(localStorage.getItem('user'));\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    await axios.post(\r\n      `${serverUrl}/seller/orders/${orderId}`, { orderStatus: status }, config,\r\n    );\r\n\r\n    setPreparing(!preparing);\r\n    setOrderStatus(status);\r\n  };\r\n\r\n  if (order) {\r\n    return (\r\n      <>\r\n        <TopBar />\r\n        <Container>\r\n          <p>Detalhe do pedido</p>\r\n          <SellerOrderStatusHeader\r\n            orderId={ order.id }\r\n            orderStatus={ orderStatus }\r\n            updateButtonsText={ updateButtonsText }\r\n            saleDate={ order.saleDate }\r\n          />\r\n          <SellerOrderDetailsTable\r\n            products={ order.products }\r\n            totalPrice={ order.totalPrice }\r\n          />\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n  return (<p>Carregando</p>);\r\n}\r\n\r\nexport default ListSellerSaleById;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\nimport './css/OrderCard.css';\r\n\r\nfunction OrderCard({ id, status, date, totalPrice }) {\r\n  const dateArray = date.split('-');\r\n  const day = `${dateArray[2][0]}${dateArray[2][1]}`;\r\n  const month = `${dateArray[1][0]}${dateArray[1][1]}`;\r\n  const year = `${dateArray[0][0]}${dateArray[0][1]}${dateArray[0][2]}${dateArray[0][3]}`;\r\n  const formattedDate = `${day}/${month}/${year}`;\r\n  const history = useHistory();\r\n\r\n  const changePath = () => {\r\n    history.push(`/customer/orders/${id}`);\r\n  };\r\n  return (\r\n    <Card\r\n      onClick={ changePath }\r\n      style={ {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        maxWidth: '400px',\r\n        alignItems: 'center',\r\n        minHeight: '70px',\r\n      } }\r\n    >\r\n      <Card.Text\r\n        style={ { marginBottom: 0 } }\r\n        data-testid={ `customer_orders__element-order-id-${id}` }\r\n      >\r\n        { `Pedido ${id}` }\r\n      </Card.Text>\r\n\r\n      <Card.Text\r\n        style={ { marginBottom: 0 } }\r\n        data-testid={ `customer_orders__element-delivery-status-${id}` }\r\n      >\r\n        { status }\r\n      </Card.Text>\r\n\r\n      <div>\r\n        <Card.Text\r\n          style={ { marginBottom: 0 } }\r\n          data-testid={ `customer_orders__element-order-date-${id}` }\r\n        >\r\n          { formattedDate }\r\n        </Card.Text>\r\n        <Card.Text data-testid={ `customer_orders__element-card-price-${id}` }>\r\n          { `R$${totalPrice.toString().split('.').join(',')}` }\r\n        </Card.Text>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nOrderCard.propTypes = {\r\n  id: Proptypes.number.isRequired,\r\n  status: Proptypes.string.isRequired,\r\n  date: Proptypes.string.isRequired,\r\n  totalPrice: Proptypes.string.isRequired,\r\n};\r\n\r\nexport default OrderCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport TopBar from '../components/navigation_bar/TopBar';\r\nimport OrderCard from '../components/orders/OrderCard';\r\nimport { serverUrl } from '../helpers/constants';\r\n\r\nfunction ListOrders() {\r\n  const [orders, setOrders] = useState();\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const { token } = JSON.parse(localStorage.getItem('user'));\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const getOrders = async () => {\r\n      const dbOrders = await axios.get(`${serverUrl}/customer/order`, config);\r\n      setOrders(dbOrders.data);\r\n    };\r\n\r\n    getOrders();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let sum = 0;\r\n    const cart = JSON.parse(localStorage.getItem('cart'));\r\n    if (cart) {\r\n      cart.forEach((element) => {\r\n        sum += element.price * element.quantity;\r\n      });\r\n    }\r\n    setCartTotal(sum);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TopBar cartTotal={ cartTotal } />\r\n      <Container>\r\n        <Row xs={ 1 } md={ 2 } sm={ 3 } className=\"g-2 justify-content-between\">\r\n          {\r\n            orders && orders.map((order) => (\r\n              <OrderCard\r\n                key={ order.id }\r\n                id={ order.id }\r\n                status={ order.status }\r\n                date={ order.saleDate }\r\n                totalPrice={ order.totalPrice }\r\n              />\r\n            ))\r\n          }\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListOrders;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Card } from 'react-bootstrap';\r\nimport './css/OrderCard.css';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction SellerOrderCard({ id, status, date, totalPrice, deliveryAddress,\r\n  deliveryNumber }) {\r\n  const dateArray = date.split('-');\r\n  const day = `${dateArray[2][0]}${dateArray[2][1]}`;\r\n  const month = `${dateArray[1][0]}${dateArray[1][1]}`;\r\n  const year = `${dateArray[0][0]}${dateArray[0][1]}${dateArray[0][2]}${dateArray[0][3]}`;\r\n  const formattedDate = `${day}/${month}/${year}`;\r\n  const history = useHistory();\r\n\r\n  const changePath = () => {\r\n    history.push(`/seller/orders/${id}`);\r\n  };\r\n  return (\r\n    <Card\r\n      onClick={ changePath }\r\n      style={ {\r\n        flexDirection: 'row',\r\n        maxWidth: '400px',\r\n        alignItems: 'center',\r\n        minHeight: '70px',\r\n        justifyContent: 'space-evenly',\r\n      } }\r\n    >\r\n      <div>\r\n        <Card.Text\r\n          style={ { marginBottom: 0 } }\r\n          data-testid={ `seller_orders__element-order-id-${id}` }\r\n        >\r\n          { `Pedido ${id}` }\r\n        </Card.Text>\r\n      </div>\r\n      <div>\r\n        <div style={ { display: 'flex', alignItems: 'center' } }>\r\n          <div>\r\n            <Card.Text\r\n              style={ { marginBottom: 0 } }\r\n              data-testid={ `seller_orders__element-delivery-status-${id}` }\r\n            >\r\n              { status }\r\n            </Card.Text>\r\n          </div>\r\n          <div>\r\n            <Card.Text\r\n              style={ { marginBottom: 0 } }\r\n              data-testid={ `seller_orders__element-order-date-${id}` }\r\n            >\r\n              { formattedDate }\r\n            </Card.Text>\r\n            <Card.Text data-testid={ `seller_orders__element-card-price-${id}` }>\r\n              { `R$${totalPrice.toString().split('.').join(',')}` }\r\n            </Card.Text>\r\n          </div>\r\n        </div>\r\n        <Card.Text style={ { textAlign: 'end' } }>\r\n          <span\r\n            data-testid={ `seller_orders__element-card-address-${id}` }\r\n          >\r\n            { `${deliveryAddress},${deliveryNumber}` }\r\n          </span>\r\n        </Card.Text>\r\n      </div>\r\n\r\n    </Card>\r\n  );\r\n}\r\n\r\nSellerOrderCard.propTypes = {\r\n  id: Proptypes.number.isRequired,\r\n  status: Proptypes.string.isRequired,\r\n  date: Proptypes.string.isRequired,\r\n  totalPrice: Proptypes.string.isRequired,\r\n  deliveryAddress: Proptypes.string.isRequired,\r\n  deliveryNumber: Proptypes.string.isRequired,\r\n};\r\n\r\nexport default SellerOrderCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport TopBar from '../components/navigation_bar/TopBar';\r\nimport SellerOrderCard from '../components/orders/SellerOrderCard';\r\nimport { serverUrl } from '../helpers/constants';\r\n\r\nfunction ListOrders() {\r\n  const [orders, setOrders] = useState();\r\n\r\n  useEffect(() => {\r\n    const { token } = JSON.parse(localStorage.getItem('user'));\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const getOrders = async () => {\r\n      const dbOrders = await axios.get(`${serverUrl}/seller/orders`, config);\r\n      setOrders(dbOrders.data.sales);\r\n    };\r\n\r\n    getOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Container>\r\n        <Row xs={ 1 } md={ 2 } sm={ 2 } className=\"g-2 justify-content-between\">\r\n          {\r\n            orders && orders.map((order) => (\r\n\r\n              <SellerOrderCard\r\n                key={ order.id }\r\n                id={ order.id }\r\n                status={ order.status }\r\n                date={ order.saleDate }\r\n                totalPrice={ order.totalPrice }\r\n                deliveryAddress={ order.deliveryAddress }\r\n                deliveryNumber={ order.deliveryNumber }\r\n              />\r\n\r\n            ))\r\n          }\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListOrders;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\nimport Products from './pages/Products';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport CheckoutCart from './pages/CheckoutCart';\r\nimport ListSaleById from './pages/ListSaleById';\r\nimport ListSellerSaleById from './pages/ListSellerSaleById';\r\nimport ListOrders from './pages/ListOrders';\r\nimport SellerOrders from './pages/SellerOrders';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/login\" component={ Login } />\r\n      <Route path=\"/register\" component={ Register } />\r\n      <PrivateRoute path=\"/customer/products\" component={ Products } />\r\n      <PrivateRoute path=\"/customer/checkout\" component={ CheckoutCart } />\r\n      <PrivateRoute path=\"/customer/orders/:id\" component={ ListSaleById } />\r\n      <PrivateRoute path=\"/customer/orders\" component={ ListOrders } />\r\n      <PrivateRoute path=\"/seller/orders/:id\" component={ ListSellerSaleById } />\r\n      <PrivateRoute path=\"/seller/orders\" component={ SellerOrders } />\r\n      <Redirect strict from=\"/\" to=\"/login\" />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={ store }>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}