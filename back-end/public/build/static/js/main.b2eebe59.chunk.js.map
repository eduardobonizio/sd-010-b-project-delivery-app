{"version":3,"sources":["reportWebVitals.js","reducers/loginReducer.js","reducers/index.js","store/index.js","components/EmailInput.jsx","components/LoginButton.jsx","components/PasswordInput.jsx","components/LoginErrorMessage.jsx","components/RegisterButton.jsx","helpers/constants.js","helpers/validation/validateEmail.js","helpers/validation/validateName.js","helpers/validation/validatePassword.js","pages/Login.jsx","components/NameInput.jsx","components/RegisterErrorMessage.jsx","pages/Register.jsx","components/TopBar.jsx","components/ProductCard.jsx","components/CartTotal.jsx","pages/Products.jsx","components/PrivateRoute.jsx","components/CheckoutProductCard.jsx","components/CheckoutCartTotal.jsx","components/CheckoutDeliveryData.jsx","pages/CheckoutCart.jsx","components/OrderDetailsTable.jsx","pages/ListSaleById.jsx","components/SellerOrderDetailsTable.jsx","pages/ListSellerSaleById.jsx","components/OrderCard.jsx","pages/ListOrders.jsx","components/SellerOrderCard.jsx","pages/SellerOrders.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","loginReducer","state","action","type","email","payload","password","rootReducer","combineReducers","store","createStore","EmailInput","props","setStateEmail","emailTestId","title","Form","Label","Control","id","onChange","e","target","value","LoginButton","dispatchOnSubmit","disabled","Button","variant","onClick","PasswordInput","setStatePassword","passwordTestId","LoginErrorMessage","hideErrorMessage","Alert","hidden","RegisterButton","history","useHistory","push","serverUrl","process","validateEmailFormat","test","validateName","name","length","validatePassword","Login","useState","setDisable","setHideErrorMessage","useEffect","alreadyLoggedIn","JSON","parse","localStorage","getItem","role","a","axios","post","response","data","setItem","stringify","redirect","to","setTimeout","Container","className","Row","Col","Image","src","NameInput","setStateName","nameTestId","Register","setDisabled","setHidden","createUser","parsedResponse","user","token","fluid","RegisterErrorMessage","TopBar","onSellerPage","location","pathname","includes","Navbar","bg","expand","Brand","width","height","alt","Toggle","Collapse","Nav","navbarScroll","Link","href","Text","clear","ProductCard","product","price","urlImage","quantity","setCart","cart","Card","Img","style","heigth","Title","toString","split","join","InputGroup","cardId","elementId","input","document","getElementById","parseInt","indexOfProduct","indexOf","newCart","removeOne","as","size","min","max","inputValue","idArray","isNaN","changeCart","placeholder","defaultValue","addOne","CartTotal","cartTotal","toFixed","Products","setCartTotal","get","productsWithQuantity","map","getProducts","sum","forEach","element","xs","md","sm","index","PrivateRoute","Component","component","rest","isLoggedIn","render","from","defaultProps","CheckoutProductCard","productIndex","splice","removeItem","CheckoutCartTotal","CheckoutDeliveryData","finishSale","setDeliveryAddress","setDeliveryNumber","setSellerId","sellers","Dropdown","selected","deliveryAddress","deliveryNumber","sellerId","setSellers","localCart","olyItensInCart","filter","getLocalStorageCartItens","getSellers","config","headers","authorization","newSale","totalPrice","products","saleId","console","log","key","OrderDetailsTable","order","Table","striped","bordered","hover","entry","SalesProduct","parseFloat","preparing","setPreparing","orderStatus","setOrderStatus","setOrder","historyArray","orderId","myOrder","status","getOrder","updateButtonsText","dateArray","saleDate","day","month","year","slice","formattedDate","seller","SellerOrderDetailsTable","ListSellerSaleById","OrderCard","date","ListOrders","orders","setOrders","dbOrders","getOrders","SellerOrderCard","sales","App","path","CheckoutCart","ListSaleById","SellerOrders","strict","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.b2eebe59.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const INITIAL_STATE = {};\r\n\r\nfunction loginReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n  case 'SET_EMAIL':\r\n    return { ...state, email: action.payload };\r\n  case 'SET_PASSWORD':\r\n    return { ...state, password: action.payload };\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default loginReducer;\r\n","import { combineReducers } from 'redux';\r\nimport loginReducer from './loginReducer';\r\n\r\nconst rootReducer = combineReducers({ loginReducer });\r\n\r\nexport default rootReducer;\r\n","import { createStore } from 'redux';\r\nimport rootReducer from '../reducers';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\n/* eslint-disable no-underscore-dangle */\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n// );\r\n/* eslint-enable */\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nfunction EmailInput(props) {\r\n  const { setStateEmail, emailTestId, title } = props;\r\n  return (\r\n    <Form.Label>\r\n      { title }\r\n      <Form.Control\r\n        id=\"email-input\"\r\n        data-testid={ emailTestId }\r\n        onChange={ (e) => {\r\n          setStateEmail(e.target.value);\r\n        } }\r\n        type=\"text\"\r\n      />\r\n    </Form.Label>\r\n  );\r\n}\r\n\r\nexport default EmailInput;\r\n\r\nEmailInput.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  emailTestId: Proptypes.string.isRequired,\r\n  setStateEmail: Proptypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction LoginButton(props) {\r\n  const { dispatchOnSubmit, disabled } = props;\r\n  return (\r\n    <Button\r\n      variant=\"success\"\r\n      data-testid=\"common_login__button-login\"\r\n      disabled={ disabled }\r\n      onClick={ dispatchOnSubmit }\r\n      type=\"button\"\r\n    >\r\n      Entrar\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default LoginButton;\r\n\r\nLoginButton.propTypes = {\r\n  dispatchOnSubmit: Proptypes.func.isRequired,\r\n  disabled: Proptypes.bool.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nfunction PasswordInput(props) {\r\n  const { setStatePassword, passwordTestId } = props;\r\n  return (\r\n    <Form.Label>\r\n      Senha\r\n      <Form.Control\r\n        data-testid={ passwordTestId }\r\n        onChange={ (e) => {\r\n          setStatePassword(e.target.value);\r\n        } }\r\n        type=\"password\"\r\n      />\r\n    </Form.Label>\r\n  );\r\n}\r\n\r\nexport default PasswordInput;\r\n\r\nPasswordInput.propTypes = {\r\n  passwordTestId: Proptypes.string.isRequired,\r\n  setStatePassword: Proptypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nfunction LoginErrorMessage({ hideErrorMessage }) {\r\n  return (\r\n    <Alert variant=\"warning\" hidden={ hideErrorMessage }>\r\n      Usuário/Senha inválidos\r\n    </Alert>\r\n  );\r\n}\r\n\r\nexport default LoginErrorMessage;\r\n\r\nLoginErrorMessage.propTypes = {\r\n  hideErrorMessage: Proptypes.bool.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction RegisterButton() {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Button\r\n      variant=\"warning\"\r\n      onClick={ () => history.push('/register') }\r\n      data-testid=\"common_login__button-register\"\r\n      type=\"button\"\r\n    >\r\n      Ainda não tenho conta\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default RegisterButton;\r\n","const serverUrl = process.env.NODE_ENV === 'production'\r\n  ? process.env.REACT_APP_PROD_API_URL\r\n  : process.env.REACT_APP_DEV_API_URL;\r\n// const serverUrl = 'https://grupo-19-delivery-app.herokuapp.com';\r\nconst test = 'teste';\r\n\r\nexport {\r\n  serverUrl,\r\n  test,\r\n};\r\n","const validateEmailFormat = (email) => {\r\n  const regexp = /\\S+@\\S+\\.\\S+/;\r\n  return regexp.test(email);\r\n};\r\n\r\nexport default validateEmailFormat;\r\n","const validateName = (name) => {\r\n  const minLength = 11;\r\n  return (name.length > minLength);\r\n};\r\n\r\nexport default validateName;\r\n","const validatePassword = (password) => {\r\n  const minLength = 5;\r\n  return (password.length > minLength);\r\n};\r\n\r\nexport default validatePassword;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Col, Container, Form, Image, Row } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport EmailInput from '../components/EmailInput';\r\nimport LoginButton from '../components/LoginButton';\r\nimport PasswordInput from '../components/PasswordInput';\r\nimport LoginErrorMessage from '../components/LoginErrorMessage';\r\nimport RegisterButton from '../components/RegisterButton';\r\nimport { validateEmailFormat, validatePassword } from '../helpers/validation';\r\nimport { serverUrl } from '../helpers/constants';\r\n\r\nfunction Login() {\r\n  const [email, setStateEmail] = useState('');\r\n  const [password, setStatePassword] = useState('');\r\n  const [disabled, setDisable] = useState(true);\r\n  const [hideErrorMessage, setHideErrorMessage] = useState(true);\r\n  const history = useHistory();\r\n  const emailTestId = 'common_login__input-email';\r\n  const passwordTestId = 'common_login__input-password';\r\n  const title = 'Login';\r\n\r\n  useEffect(() => {\r\n    if (password && email) {\r\n      if (validateEmailFormat(email) && validatePassword(password)) {\r\n        setDisable(false);\r\n      } else {\r\n        setDisable(true);\r\n      }\r\n    }\r\n  }, [email, password]);\r\n\r\n  useEffect(() => {\r\n    const alreadyLoggedIn = JSON.parse(localStorage.getItem('user'));\r\n    if (alreadyLoggedIn) {\r\n      const { role } = alreadyLoggedIn;\r\n      if (role === 'customer') return history.push('/customer/products');\r\n      if (role === 'seller') return history.push('/seller/orders');\r\n    }\r\n  });\r\n\r\n  const dispatchOnSubmit = async () => {\r\n    try {\r\n      const response = await axios.post(`${serverUrl}/login`, { email, password });\r\n      const { data } = response;\r\n      localStorage.setItem('user', JSON.stringify(data));\r\n      redirect.to[data.role]();\r\n    } catch (e) {\r\n      const delay = 3000;\r\n      setHideErrorMessage(false);\r\n      setTimeout(() => setHideErrorMessage(true), delay);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center\">\r\n      <Form>\r\n        <Row>\r\n          <Col>\r\n            <Image src=\"images/logo.svg\" />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"d-flex justify-content-center\">\r\n            <h3>Disk-Birita</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <EmailInput\r\n              title={ title }\r\n              setStateEmail={ setStateEmail }\r\n              emailTestId={ emailTestId }\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <PasswordInput\r\n              setStatePassword={ setStatePassword }\r\n              passwordTestId={ passwordTestId }\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"d-flex justify-content-center\">\r\n            <LoginButton dispatchOnSubmit={ dispatchOnSubmit } disabled={ disabled } />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"d-flex justify-content-center\">\r\n            <RegisterButton />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"d-flex justify-content-center\">\r\n            <LoginErrorMessage hideErrorMessage={ hideErrorMessage } />\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nfunction NameInput(props) {\r\n  const { setStateName, nameTestId } = props;\r\n  return (\r\n    <Form.Label>\r\n      Nome\r\n      <Form.Control\r\n        id=\"name-input\"\r\n        data-testid={ nameTestId }\r\n        onChange={ (e) => {\r\n          setStateName(e.target.value);\r\n        } }\r\n        type=\"text\"\r\n      />\r\n    </Form.Label>\r\n  );\r\n}\r\n\r\nexport default NameInput;\r\n\r\nNameInput.propTypes = {\r\n  nameTestId: Proptypes.string.isRequired,\r\n  setStateName: Proptypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nfunction LoginErrorMessage({ hidden }) {\r\n  return (\r\n    <Alert\r\n      variant=\"warning\"\r\n      hidden={ hidden }\r\n      data-testid=\"common_register__element-invalid_register\"\r\n    >\r\n      Usuário já existente!\r\n    </Alert>\r\n  );\r\n}\r\n\r\nexport default LoginErrorMessage;\r\n\r\nLoginErrorMessage.propTypes = {\r\n  hidden: Proptypes.bool.isRequired,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport { Col, Container, Form, Image, Row } from 'react-bootstrap';\r\nimport EmailInput from '../components/EmailInput';\r\nimport PasswordInput from '../components/PasswordInput';\r\nimport NameInput from '../components/NameInput';\r\nimport RegisterErrorMessage from '../components/RegisterErrorMessage';\r\nimport {\r\n  validateEmailFormat,\r\n  validateName, validatePassword } from '../helpers/validation';\r\nimport { serverUrl } from '../helpers/constants';\r\n\r\nfunction Register() {\r\n  const history = useHistory();\r\n\r\n  const [name, setStateName] = useState();\r\n  const [email, setStateEmail] = useState();\r\n  const [password, setStatePassword] = useState();\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [hidden, setHidden] = useState(true);\r\n\r\n  const nameTestId = 'common_register__input-name';\r\n  const emailTestId = 'common_register__input-email';\r\n  const passwordTestId = 'common_register__input-password';\r\n  const title = 'Email';\r\n\r\n  useEffect(() => {\r\n    if (password && email && name) {\r\n      if (validateEmailFormat(email) && validatePassword(password)\r\n      && validateName(name)) {\r\n        setDisabled(false);\r\n      } else {\r\n        setDisabled(true);\r\n      }\r\n    }\r\n  }, [email, name, password]);\r\n\r\n  const createUser = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${serverUrl}/register`, { name, email, password },\r\n      );\r\n      const parsedResponse = response.data;\r\n      const user = {\r\n        name: parsedResponse.name,\r\n        email: parsedResponse.email,\r\n        role: parsedResponse.role,\r\n        token: parsedResponse.token,\r\n      };\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      history.push('/customer/products');\r\n    } catch (e) {\r\n      const delay = 3000;\r\n      setHidden(false);\r\n      setTimeout(() => setHidden(true), delay);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center\">\r\n      <Form className=\"align-self-center\">\r\n        <Row>\r\n          <Col>\r\n            <Image src=\"images/logo.svg\" className=\".login-logo\" fluid />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"d-flex justify-content-center\">\r\n            <h3>Disk-Birita</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <NameInput\r\n              nameTestId={ nameTestId }\r\n              setStateName={ setStateName }\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <EmailInput\r\n              emailTestId={ emailTestId }\r\n              setStateEmail={ setStateEmail }\r\n              title={ title }\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <PasswordInput\r\n              passwordTestId={ passwordTestId }\r\n              setStatePassword={ setStatePassword }\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"d-flex justify-content-center\">\r\n            <Button\r\n              variant=\"success\"\r\n              data-testid=\"common_register__button-register\"\r\n              disabled={ disabled }\r\n              onClick={ createUser }\r\n              type=\"button\"\r\n            >\r\n              Cadastrar\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col>\r\n            <RegisterErrorMessage hidden={ hidden } />\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","/* eslint-disable react/jsx-max-depth */\r\nimport React from 'react';\r\nimport { Container, Image, Nav, Navbar, Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction TopBar() {\r\n  const { name } = JSON.parse(localStorage.getItem('user'));\r\n  const history = useHistory();\r\n  const onSellerPage = history.location.pathname.includes('/seller');\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"md\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <Image\r\n            src=\"/images/logo.svg\"\r\n            width=\"50\"\r\n            height=\"40\"\r\n            alt=\"Disk Birita logo\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        <Navbar.Collapse id=\"navbarScroll\">\r\n          <Nav\r\n            className=\"me-auto my-2 my-lg-0\"\r\n            navbarScroll\r\n          >\r\n            <Nav.Link\r\n              href={ onSellerPage ? '/seller/orders' : '/customer/products' }\r\n              data-testid={ `customer_products__element-navbar-link-${\r\n                onSellerPage ? 'orders' : 'products'\r\n              }` }\r\n            >\r\n              { onSellerPage ? 'ORDERS' : 'PRODUTOS' }\r\n            </Nav.Link>\r\n            {!onSellerPage\r\n              && (\r\n                <Nav.Link\r\n                  href=\"/customer/orders\"\r\n                  data-testid=\"customer_products__element-navbar-link-orders\"\r\n                >\r\n                  PEDIDOS\r\n                </Nav.Link>\r\n              )}\r\n          </Nav>\r\n          <Navbar.Text\r\n            data-testid=\"customer_products__element-navbar-user-full-name\"\r\n            href=\"/customer/orders\"\r\n          >\r\n            { name }\r\n          </Navbar.Text>\r\n          <Button\r\n            onClick={ logout }\r\n            data-testid=\"customer_products__element-navbar-link-logout\"\r\n            type=\"button\"\r\n          >\r\n            Sair\r\n          </Button>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Button, Card, Form, InputGroup } from 'react-bootstrap';\r\n\r\nfunction ProductCard(props) {\r\n  const { product, product: { id, name, price, urlImage, quantity },\r\n    setCart, cart } = props;\r\n  const addOne = (cardId) => {\r\n    const elementId = `input-${cardId}`;\r\n    const input = document.getElementById(elementId);\r\n    const regex = /^[0-9\\b]+$/;\r\n    if (regex.test(input.value)) {\r\n      input.value = parseInt(input.value, 10) + 1;\r\n    } else {\r\n      input.value = 1;\r\n    }\r\n    const indexOfProduct = cart.indexOf(product);\r\n    const newCart = [...cart];\r\n    newCart[indexOfProduct] = {\r\n      id,\r\n      price,\r\n      quantity: parseInt(input.value, 10),\r\n      name,\r\n      urlImage,\r\n    };\r\n    setCart(newCart);\r\n  };\r\n\r\n  const removeOne = (cardId) => {\r\n    const elementId = `input-${cardId}`;\r\n    const input = document.getElementById(elementId);\r\n    const regex = /^[0-9\\b]+$/;\r\n\r\n    if ((regex.test(input.value)) && (parseInt(input.value, 10) > 0)) {\r\n      input.value = parseInt(input.value, 10) - 1;\r\n    } else {\r\n      input.value = 0;\r\n    }\r\n    const indexOfProduct = cart.indexOf(product);\r\n    const newCart = [...cart];\r\n    newCart[indexOfProduct] = {\r\n      id,\r\n      price,\r\n      quantity: parseInt(input.value, 10),\r\n      name,\r\n      urlImage,\r\n    };\r\n    setCart(newCart);\r\n  };\r\n\r\n  const changeCart = (cardId, value) => {\r\n    let inputValue = value;\r\n    const idArray = cardId.split('-')[1] - 1;\r\n    if (value.isNaN) {\r\n      inputValue = 0;\r\n    }\r\n\r\n    const newCart = [...cart];\r\n    newCart[idArray] = {\r\n      id,\r\n      price,\r\n      quantity: parseInt(inputValue, 10),\r\n      name,\r\n      urlImage,\r\n    };\r\n    setCart(newCart);\r\n  };\r\n\r\n  return (\r\n\r\n    <Card>\r\n      <Card.Img\r\n        data-testid={ `customer_products__img-card-bg-image-${id}` }\r\n        variant=\"top\"\r\n        src={ urlImage }\r\n        style={ { heigth: '100px' } }\r\n      />\r\n      <Card.Title\r\n        data-testid={ `customer_products__element-card-title-${id}` }\r\n      >\r\n        { name }\r\n      </Card.Title>\r\n      <Card.Text>\r\n        R$\r\n        <span\r\n          data-testid={ `customer_products__element-card-price-${id}` }\r\n        >\r\n          { price.toString().split('.').join(',') }\r\n        </span>\r\n      </Card.Text>\r\n      <InputGroup>\r\n        <Button\r\n          id={ id }\r\n          data-testid={ `customer_products__button-card-rm-item-${id}` }\r\n          variant=\"success\"\r\n          onClick={ (e) => removeOne(e.target.id) }\r\n        >\r\n          -\r\n        </Button>\r\n        <Form.Control\r\n          as=\"input\"\r\n          size=\"sm\"\r\n          min=\"0\"\r\n          max=\"99\"\r\n          id={ `input-${id}` }\r\n          data-testid={ `customer_products__input-card-quantity-${id}` }\r\n          onChange={ (e) => {\r\n            changeCart(e.target.id, e.target.value);\r\n          } }\r\n          type=\"integer\"\r\n          placeholder=\"0\"\r\n          defaultValue={ quantity }\r\n        />\r\n        <Button\r\n          id={ id }\r\n          data-testid={ `customer_products__button-card-add-item-${id}` }\r\n          onClick={ (e) => addOne(e.target.id) }\r\n          variant=\"success\"\r\n        >\r\n          +\r\n        </Button>\r\n      </InputGroup>\r\n    </Card>\r\n\r\n  );\r\n}\r\n\r\nProductCard.propTypes = {\r\n  product: Proptypes.shape({\r\n    id: Proptypes.number,\r\n    quantity: Proptypes.number,\r\n    name: Proptypes.string,\r\n    price: Proptypes.string,\r\n    urlImage: Proptypes.string,\r\n  }).isRequired,\r\n  setCart: Proptypes.func.isRequired,\r\n  cart: Proptypes.arrayOf(Proptypes.object).isRequired,\r\n};\r\n\r\nexport default ProductCard;\r\n","import React from 'react';\r\n// import './css/CartTotal.css';\r\nimport Proptypes from 'prop-types';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction CartTotal({ cartTotal }) {\r\n  const history = useHistory();\r\n  const redirectToCart = () => history.push('/customer/checkout');\r\n  return (\r\n    <div\r\n      className=\"floating-total\"\r\n      data-testid=\"customer_products__checkout-bottom-value\"\r\n      disabled={ cartTotal <= 0 }\r\n    >\r\n      Ver Carrinho: R$\r\n      <button\r\n        type=\"button\"\r\n        data-testid=\"customer_products__button-cart\"\r\n        disabled={ cartTotal <= 0 }\r\n        onClick={ redirectToCart }\r\n      >\r\n        { ` ${cartTotal.toFixed(2).toString().split('.').join(',')}` }\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nCartTotal.propTypes = {\r\n  cartTotal: Proptypes.number.isRequired,\r\n};\r\n\r\nexport default CartTotal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport TopBar from '../components/TopBar';\r\nimport ProductCard from '../components/ProductCard';\r\nimport CartTotal from '../components/CartTotal';\r\nimport { serverUrl } from '../helpers/constants';\r\n\r\nfunction Products() {\r\n  const [cart, setCart] = useState();\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const getProducts = async () => {\r\n      const response = await axios.get(`${serverUrl}/products`);\r\n      const productsWithQuantity = response.data.map((e) => {\r\n        e.quantity = 0;\r\n        return e;\r\n      });\r\n      setCart(productsWithQuantity);\r\n    };\r\n    getProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let sum = 0;\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n    if (cart) {\r\n      cart.forEach((element) => {\r\n        sum += element.price * element.quantity;\r\n      });\r\n    }\r\n    setCartTotal(sum);\r\n  }, [cart]);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Container>\r\n        <Row xs={ 1 } md={ 3 } sm={ 2 } className=\"g-4\">\r\n          {\r\n            cart && cart.map((product, index) => (\r\n              <ProductCard\r\n                product={ product }\r\n                setCart={ setCart }\r\n                cart={ cart }\r\n                key={ index }\r\n              />\r\n            ))\r\n          }\r\n        </Row>\r\n      </Container>\r\n      <CartTotal cartTotal={ cartTotal } />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Products;\r\n","/* eslint-disable react/prop-types */\r\n// https://stackoverflow.com/questions/47476186/when-user-is-not-logged-in-redirect-to-login-reactjs\r\nimport React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const isLoggedIn = localStorage.getItem('user');\r\n  return (\r\n    <Route\r\n      { ...rest }\r\n      render={ (props) => (isLoggedIn ? (\r\n        <Component { ...props } />\r\n      ) : (\r\n        <Redirect to={ { pathname: '/login', state: { from: props.location } } } />\r\n      )) }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n\r\nPrivateRoute.propTypes = {\r\n  component: Proptypes.func.isRequired,\r\n  location: Proptypes.shape({}),\r\n};\r\n\r\nPrivateRoute.defaultProps = {\r\n  location: {},\r\n};\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction CheckoutProductCard(props) {\r\n  const { product, product: { id, name, price, quantity },\r\n    setCart, cart } = props;\r\n  const index = cart.indexOf(product);\r\n\r\n  const removeItem = (productIndex) => {\r\n    const newCart = [...cart];\r\n    newCart.splice(productIndex, 1);\r\n    return setCart(newCart);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        data-testid={ `customer_checkout__element-order-table-item-number-${index}` }\r\n      >\r\n        { index + 1 }\r\n      </div>\r\n      <div\r\n        data-testid={ `customer_checkout__element-order-table-name-${index}` }\r\n      >\r\n        { name }\r\n      </div>\r\n      <div\r\n        data-testid={ `customer_checkout__element-order-table-quantity-${index}` }\r\n      >\r\n        { quantity }\r\n      </div>\r\n      <div>\r\n        R$\r\n        <div\r\n          data-testid={ `customer_checkout__element-order-table-unit-price-${index}` }\r\n        >\r\n          { price.toString().split('.').join(',') }\r\n        </div>\r\n      </div>\r\n      <div>\r\n        R$\r\n        <span\r\n          data-testid={ `customer_checkout__element-order-table-sub-total-${index}` }\r\n        >\r\n          { (price * quantity).toFixed(2).toString().split('.').join(',') }\r\n        </span>\r\n      </div>\r\n      <Button\r\n        id={ id }\r\n        data-testid={ `customer_checkout__element-order-table-remove-${index}` }\r\n        onClick={ () => removeItem(index) }\r\n        variant=\"success\"\r\n      >\r\n        Remover\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nCheckoutProductCard.propTypes = {\r\n  product: Proptypes.shape({\r\n    id: Proptypes.number,\r\n    quantity: Proptypes.number,\r\n    name: Proptypes.string,\r\n    price: Proptypes.string,\r\n    urlImage: Proptypes.string,\r\n  }).isRequired,\r\n  setCart: Proptypes.func.isRequired,\r\n  cart: Proptypes.arrayOf(Proptypes.object).isRequired,\r\n};\r\n\r\nexport default CheckoutProductCard;\r\n","import React from 'react';\r\n// import './css/CartTotal.css';\r\nimport Proptypes from 'prop-types';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction CheckoutCartTotal({ cartTotal }) {\r\n  const history = useHistory();\r\n  const redirectToCart = () => history.push('/customer/checkout');\r\n  return (\r\n    <div\r\n      className=\"floating-total\"\r\n      data-testid=\"customer_products__checkout-bottom-value\"\r\n      disabled={ cartTotal <= 0 }\r\n    >\r\n      Total: R$\r\n      <button\r\n        type=\"button\"\r\n        data-testid=\"customer_checkout__element-order-total-price\"\r\n        disabled={ cartTotal <= 0 }\r\n        onClick={ redirectToCart }\r\n      >\r\n        { ` ${cartTotal.toFixed(2).toString().split('.').join(',')}` }\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nCheckoutCartTotal.propTypes = {\r\n  cartTotal: Proptypes.number.isRequired,\r\n};\r\n\r\nexport default CheckoutCartTotal;\r\n","import React from 'react';\r\nimport { Container, Dropdown, Form } from 'react-bootstrap';\r\nimport Proptypes from 'prop-types';\r\n\r\nfunction CheckoutDeliveryData(props) {\r\n  const { finishSale, setDeliveryAddress, setDeliveryNumber, setSellerId,\r\n    sellers } = props;\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"d-flex\">\r\n        {/* title */}\r\n        <Dropdown>\r\n          <div>\r\n            <span>\r\n              P. Vendedora Responsável:\r\n            </span>\r\n          </div>\r\n\r\n          <select\r\n            onChange={ (e) => setSellerId(e.target.value) }\r\n            name=\"select\"\r\n            data-testid=\"customer_checkout__select-seller\"\r\n          >\r\n            <option disabled selected value> -- Selecione -- </option>\r\n            {sellers.map((\r\n              { id, name }, index,\r\n            ) => (<option key={ index } value={ id } defaultValue>{name}</option>))}\r\n          </select>\r\n        </Dropdown>\r\n        <Form.Label>\r\n          Endereço\r\n          <Form.Control\r\n            placeholder=\"Travessa Terceira da Castanheira, Bairro Murici\"\r\n            type=\"text\"\r\n            data-testid=\"customer_checkout__input-address\"\r\n            onChange={ (e) => {\r\n              setDeliveryAddress(e.target.value);\r\n            } }\r\n          />\r\n        </Form.Label>\r\n        <Form.Label>\r\n          Número\r\n          <Form.Control\r\n            placeholder=\"198\"\r\n            data-testid=\"customer_checkout__input-addressNumber\"\r\n            type=\"number\"\r\n            onChange={ (e) => {\r\n              setDeliveryNumber(e.target.value);\r\n            } }\r\n          />\r\n        </Form.Label>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        data-testid=\"customer_checkout__button-submit-order\"\r\n        // disabled={ cartTotal <= 0 }\r\n        onClick={ finishSale }\r\n      >\r\n        FINALIZAR PEDIDO\r\n      </button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CheckoutDeliveryData;\r\n\r\nCheckoutDeliveryData.propTypes = {\r\n  finishSale: Proptypes.func.isRequired,\r\n  setDeliveryNumber: Proptypes.func.isRequired,\r\n  setDeliveryAddress: Proptypes.func.isRequired,\r\n  setSellerId: Proptypes.func.isRequired,\r\n  sellers: Proptypes.arrayOf({}).isRequired,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport axios from 'axios';\r\nimport TopBar from '../components/TopBar';\r\nimport CheckoutProductCard from '../components/CheckoutProductCard';\r\nimport CheckoutCartTotal from '../components/CheckoutCartTotal';\r\nimport CheckoutDeliveryData from '../components/CheckoutDeliveryData';\r\nimport { serverUrl } from '../helpers/constants';\r\n\r\nfunction Products() {\r\n  const history = useHistory();\r\n  const [cart, setCart] = useState();\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [deliveryAddress, setDeliveryAddress] = useState('');\r\n  const [deliveryNumber, setDeliveryNumber] = useState('');\r\n  const [sellerId, setSellerId] = useState();\r\n  const [sellers, setSellers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getLocalStorageCartItens = async () => {\r\n      const localCart = JSON.parse(localStorage.getItem('cart'));\r\n      const olyItensInCart = localCart.filter((e) => e.quantity > 0);\r\n      setCart(olyItensInCart);\r\n    };\r\n    getLocalStorageCartItens();\r\n\r\n    const getSellers = async () => {\r\n      const { data } = await axios.get(`${serverUrl}/seller/all`);\r\n      setSellers(data);\r\n    };\r\n    getSellers();\r\n  }, [setSellers]);\r\n\r\n  useEffect(() => {\r\n    let sum = 0;\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n    if (cart) {\r\n      cart.forEach((element) => {\r\n        sum += element.price * element.quantity;\r\n      });\r\n    }\r\n    setCartTotal(sum);\r\n  }, [cart]);\r\n\r\n  const finishSale = async () => {\r\n    try {\r\n      const { token } = JSON.parse(localStorage.getItem('user'));\r\n      const config = {\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n      };\r\n      const newSale = {\r\n        totalPrice: cartTotal,\r\n        products: cart,\r\n        deliveryAddress,\r\n        deliveryNumber,\r\n        sellerId,\r\n      };\r\n\r\n      const { data: { saleId } } = await axios.post(\r\n        `${serverUrl}/customer/checkout`, newSale, config,\r\n      );\r\n      history.push(`/customer/orders/${saleId}`);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <div>\r\n        {\r\n          cart && cart.map((product) => (\r\n            <CheckoutProductCard\r\n              key={ product.key }\r\n              product={ product }\r\n              setCart={ setCart }\r\n              cart={ cart }\r\n            />\r\n          ))\r\n        }\r\n        <CheckoutCartTotal cartTotal={ cartTotal } />\r\n      </div>\r\n      <div>Detalhes e Endereço para Entrega</div>\r\n      <CheckoutDeliveryData\r\n        setDeliveryNumber={ setDeliveryNumber }\r\n        setDeliveryAddress={ setDeliveryAddress }\r\n        finishSale={ finishSale }\r\n        setSellerId={ setSellerId }\r\n        sellers={ sellers }\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default Products;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nfunction OrderDetailsTable({ order }) {\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>Item</th>\r\n          <th>Descrição</th>\r\n          <th>Quantidade</th>\r\n          <th>Valor unitário</th>\r\n          <th>Sub-total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        { order.map((entry) => (\r\n          <tr key={ entry.id }>\r\n            <td\r\n              data-testid={\r\n                `customer_order_details__element-order-table-item-number-${entry.id}`\r\n              }\r\n            >\r\n              { entry.id }\r\n            </td>\r\n            <td\r\n              data-testid={\r\n                `customer_order_details__element-order-table-name-${entry.id}`\r\n              }\r\n            >\r\n              { entry.name }\r\n            </td>\r\n            <td\r\n              data-testid={\r\n                `customer_order_details__element-order-table-quantity-${entry.id}`\r\n              }\r\n            >\r\n              { entry.SalesProduct.quantity }\r\n            </td>\r\n            <td\r\n              data-testid={\r\n                `customer_order_details__element-order-table-sub-total-${entry.id}`\r\n              }\r\n            >\r\n              R$\r\n              { entry.price.split('.').join(',') }\r\n            </td>\r\n            <td>\r\n              R$\r\n              {\r\n                (parseFloat(entry.price)\r\n              * entry.SalesProduct.quantity).toFixed(2).split('.').join(',')\r\n              }\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nOrderDetailsTable.propTypes = {\r\n  order: Proptypes.arrayOf(Proptypes.any).isRequired,\r\n};\r\n\r\nexport default OrderDetailsTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport TopBar from '../components/TopBar';\r\nimport OrderDetailsTable from '../components/OrderDetailsTable';\r\nimport { serverUrl } from '../helpers/constants';\r\n\r\nfunction Products() {\r\n  const [preparing, setPreparing] = useState(false);\r\n  const [orderStatus, setOrderStatus] = useState('Pendente');\r\n  const [order, setOrder] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const historyArray = history.location.pathname.split('/');\r\n    const orderId = historyArray[historyArray.length - 1];\r\n    const { token } = JSON.parse(localStorage.getItem('user'));\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const getOrder = async () => {\r\n      const myOrder = await axios.get(`${serverUrl}/customer/orders/${orderId}`, config);\r\n      setOrder(myOrder.data.order);\r\n      setOrderStatus(myOrder.data.order.status);\r\n    };\r\n\r\n    getOrder();\r\n  }, [history.location.pathname]);\r\n\r\n  const updateButtonsText = async (status) => {\r\n    const historyArray = history.location.pathname.split('/');\r\n    const orderId = historyArray[historyArray.length - 1];\r\n    const { token } = JSON.parse(localStorage.getItem('user'));\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    axios.post(`${serverUrl}/seller/orders/${orderId}`, { orderStatus: status }, config);\r\n\r\n    setPreparing(!preparing);\r\n    setOrderStatus(status);\r\n  };\r\n\r\n  if (order) {\r\n    const endArraySlice = 4;\r\n    const dateArray = order.saleDate.split('-');\r\n    const day = `${dateArray[2][0]}${dateArray[2][1]}`;\r\n    const month = `${dateArray[1][0]}${dateArray[1][1]}`;\r\n    const year = `${dateArray[0].slice(0, endArraySlice)}`;\r\n    const formattedDate = `${day}/${month}/${year}`;\r\n    const label = 'customer_order_details__element-order-details-label-delivery-status';\r\n    return (\r\n      <>\r\n        <TopBar />\r\n        <p>Detalhe do pedido</p>\r\n        <div>\r\n          <span\r\n            data-testid=\"customer_order_details__element-order-details-label-order-id\"\r\n          >\r\n            Pedido\r\n            { order.id }\r\n          </span>\r\n          <span\r\n            data-testid=\"customer_order_details__element-order-details-label-seller-name\"\r\n          >\r\n            P. Vendedora:\r\n            { order.seller.name }\r\n          </span>\r\n          <span\r\n            data-testid=\"customer_order_details__element-order-details-label-order-date\"\r\n          >\r\n            { formattedDate }\r\n          </span>\r\n          <span\r\n            data-testid={ label }\r\n          >\r\n            { orderStatus }\r\n          </span>\r\n          <button\r\n            data-testid=\"customer_order_details__button-delivery-check\"\r\n            type=\"button\"\r\n            disabled={ orderStatus !== 'Em Trânsito' }\r\n            onClick={ () => updateButtonsText('Entregue') }\r\n          >\r\n            MARCAR COMO ENTREGUE\r\n          </button>\r\n          <OrderDetailsTable order={ order.products } />\r\n          <span>Total: R$</span>\r\n          <span\r\n            data-testid=\"customer_order_details__element-order-total-price\"\r\n          >\r\n            { order.totalPrice.split('.').join(',') }\r\n          </span>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return (<p>Carregando</p>);\r\n}\r\n\r\nexport default Products;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nfunction SellerOrderDetailsTable({ order }) {\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>Item</th>\r\n          <th>Descrição</th>\r\n          <th>Quantidade</th>\r\n          <th>Valor unitário</th>\r\n          <th>Sub-total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        { order.map((entry) => (\r\n          <tr key={ entry.id }>\r\n            <td\r\n              data-testid={\r\n                `seller_order_details__element-order-table-item-number-${entry.id}`\r\n              }\r\n            >\r\n              { entry.id }\r\n            </td>\r\n            <td\r\n              data-testid={\r\n                `seller_order_details__element-order-table-name--${entry.id}`\r\n              }\r\n            >\r\n              { entry.name }\r\n            </td>\r\n            <td\r\n              data-testid={\r\n                `seller_order_details__element-order-table-quantity-${entry.id}`\r\n              }\r\n            >\r\n              { entry.SalesProduct.quantity }\r\n            </td>\r\n            <td\r\n              data-testid={\r\n                `seller_order_details__element-order-table-unit-price-${entry.id}`\r\n              }\r\n            >\r\n              R$\r\n              { entry.price.split('.').join(',') }\r\n            </td>\r\n            <td\r\n              data-testid={\r\n                `seller_order_details__element-order-table-sub-total${entry}`\r\n              }\r\n            >\r\n              R$\r\n              {\r\n                (parseFloat(entry.price)\r\n              * entry.SalesProduct.quantity).toFixed(2).split('.').join(',')\r\n              }\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nSellerOrderDetailsTable.propTypes = {\r\n  order: Proptypes.arrayOf(Proptypes.any).isRequired,\r\n};\r\n\r\nexport default SellerOrderDetailsTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport TopBar from '../components/TopBar';\r\nimport SellerOrderDetailsTable from '../components/SellerOrderDetailsTable';\r\nimport { serverUrl } from '../helpers/constants';\r\n\r\nfunction ListSellerSaleById() {\r\n  const [order, setOrder] = useState();\r\n  const [preparing, setPreparing] = useState(false);\r\n  const [orderStatus, setOrderStatus] = useState('Pendente');\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const historyArray = history.location.pathname.split('/');\r\n    const orderId = historyArray[historyArray.length - 1];\r\n    const { token } = JSON.parse(localStorage.getItem('user'));\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const getOrder = async () => {\r\n      const myOrder = await axios.get(`${serverUrl}/seller/orders/${orderId}`, config);\r\n\r\n      setOrder(myOrder.data.order);\r\n      setOrderStatus(myOrder.data.order.status);\r\n    };\r\n\r\n    getOrder();\r\n  }, [history.location.pathname]);\r\n\r\n  const updateButtonsText = async (status) => {\r\n    const historyArray = history.location.pathname.split('/');\r\n    const orderId = historyArray[historyArray.length - 1];\r\n    const { token } = JSON.parse(localStorage.getItem('user'));\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    await axios.post(\r\n      `${serverUrl}/seller/orders/${orderId}`, { orderStatus: status }, config,\r\n    );\r\n\r\n    setPreparing(!preparing);\r\n    setOrderStatus(status);\r\n  };\r\n\r\n  if (order) {\r\n    const endArraySlice = 4;\r\n    const dateArray = order.saleDate.split('-');\r\n    const day = `${dateArray[2][0]}${dateArray[2][1]}`;\r\n    const month = `${dateArray[1][0]}${dateArray[1][1]}`;\r\n    const year = `${dateArray[0].slice(0, endArraySlice)}`;\r\n    const formattedDate = `${day}/${month}/${year}`;\r\n\r\n    const label = 'seller_order_details__element-order-details-label-delivery-status';\r\n    return (\r\n      <>\r\n        <TopBar />\r\n        <p>Detalhe do pedido</p>\r\n        <div>\r\n          <span\r\n            data-testid=\"seller_order_details__element-order-details-label-order-id\"\r\n          >\r\n            Pedido\r\n            { order.id }\r\n          </span>\r\n          <span\r\n            data-testid=\"seller_order_details__element-order-details-label-order-date\"\r\n          >\r\n            { formattedDate }\r\n          </span>\r\n          <span\r\n            data-testid={ label }\r\n          >\r\n            {orderStatus}\r\n          </span>\r\n          <button\r\n            data-testid=\"seller_order_details__button-preparing-check\"\r\n            type=\"button\"\r\n            disabled={ orderStatus !== 'Pendente' }\r\n            onClick={ () => updateButtonsText('Preparando') }\r\n          >\r\n            PREPARAR PEDIDO\r\n          </button>\r\n          <button\r\n            data-testid=\"seller_order_details__button-dispatch-check\"\r\n            type=\"button\"\r\n            disabled={ orderStatus !== 'Preparando' }\r\n            onClick={ () => updateButtonsText('Em Trânsito') }\r\n          >\r\n            SAIU PARA ENTREGA\r\n          </button>\r\n          <SellerOrderDetailsTable order={ order.products } />\r\n          <span>Total: R$</span>\r\n          <span\r\n            data-testid=\"seller_order_details__element-order-total-price\"\r\n          >\r\n            { order.totalPrice.split('.').join(',') }\r\n          </span>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return (<p>Carregando</p>);\r\n}\r\n\r\nexport default ListSellerSaleById;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nfunction OrderCard({ id, status, date, totalPrice }) {\r\n  const dateArray = date.split('-');\r\n  const day = `${dateArray[2][0]}${dateArray[2][1]}`;\r\n  const month = `${dateArray[1][0]}${dateArray[1][1]}`;\r\n  const year = `${dateArray[0][0]}${dateArray[0][1]}${dateArray[0][2]}${dateArray[0][3]}`;\r\n  const formattedDate = `${day}/${month}/${year}`;\r\n\r\n  return (\r\n    <a href={ `/customer/orders/${id}` }>\r\n      <Card.Title\r\n        data-testid={ `customer_orders__element-order-id-${id}` }\r\n      >\r\n        Pedido\r\n        { id }\r\n      </Card.Title>\r\n      <Card.Text>\r\n        <span\r\n          data-testid={ `customer_orders__element-delivery-status-${id}` }\r\n        >\r\n          { status }\r\n        </span>\r\n      </Card.Text>\r\n      <Card.Text>\r\n        <span\r\n          data-testid={ `customer_orders__element-order-date-${id}` }\r\n        >\r\n          { formattedDate }\r\n        </span>\r\n      </Card.Text>\r\n      <Card.Text>\r\n        R$\r\n        <span\r\n          data-testid={ `customer_orders__element-card-price-${id}` }\r\n        >\r\n          { totalPrice.toString().split('.').join(',') }\r\n        </span>\r\n      </Card.Text>\r\n    </a>\r\n  );\r\n}\r\n\r\nOrderCard.propTypes = {\r\n  id: Proptypes.number.isRequired,\r\n  status: Proptypes.string.isRequired,\r\n  date: Proptypes.string.isRequired,\r\n  totalPrice: Proptypes.string.isRequired,\r\n};\r\n\r\nexport default OrderCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport TopBar from '../components/TopBar';\r\nimport OrderCard from '../components/OrderCard';\r\nimport { serverUrl } from '../helpers/constants';\r\n\r\nfunction ListOrders() {\r\n  const [orders, setOrders] = useState();\r\n\r\n  useEffect(() => {\r\n    const { token } = JSON.parse(localStorage.getItem('user'));\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const getOrders = async () => {\r\n      const dbOrders = await axios.get(`${serverUrl}/customer/orders`, config);\r\n      setOrders(dbOrders.data);\r\n    };\r\n\r\n    getOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Container fluid>\r\n        <Row>\r\n          {\r\n            orders && orders.map((order) => (\r\n              <Col key={ order.id }>\r\n                <OrderCard\r\n                  id={ order.id }\r\n                  status={ order.status }\r\n                  date={ order.saleDate }\r\n                  totalPrice={ order.totalPrice }\r\n                />\r\n              </Col>\r\n            ))\r\n          }\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListOrders;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nfunction SellerOrderCard({ id, status, date, totalPrice, deliveryAddress,\r\n  deliveryNumber }) {\r\n  const dateArray = date.split('-');\r\n  const day = `${dateArray[2][0]}${dateArray[2][1]}`;\r\n  const month = `${dateArray[1][0]}${dateArray[1][1]}`;\r\n  const year = `${dateArray[0][0]}${dateArray[0][1]}${dateArray[0][2]}${dateArray[0][3]}`;\r\n  const formattedDate = `${day}/${month}/${year}`;\r\n\r\n  return (\r\n    <a href={ `/seller/orders/${id}` }>\r\n      <Card.Title\r\n        data-testid={ `seller_orders__element-order-id-${id}` }\r\n      >\r\n        Pedido\r\n        { id }\r\n      </Card.Title>\r\n      <Card.Text>\r\n        <span\r\n          data-testid={ `seller_orders__element-delivery-status-${id}` }\r\n        >\r\n          { status }\r\n        </span>\r\n      </Card.Text>\r\n      <Card.Text>\r\n        <span\r\n          data-testid={ `seller_orders__element-order-date-${id}` }\r\n        >\r\n          { formattedDate }\r\n        </span>\r\n      </Card.Text>\r\n      <Card.Text>\r\n        R$\r\n        <span\r\n          data-testid={ `seller_orders__element-card-price-${id}` }\r\n        >\r\n          { totalPrice.toString().split('.').join(',') }\r\n        </span>\r\n      </Card.Text>\r\n      <Card.Text>\r\n        <span\r\n          data-testid={ `seller_orders__element-card-address-${id}` }\r\n        >\r\n          { `${deliveryAddress},${deliveryNumber}` }\r\n        </span>\r\n      </Card.Text>\r\n    </a>\r\n  );\r\n}\r\n\r\nSellerOrderCard.propTypes = {\r\n  id: Proptypes.number.isRequired,\r\n  status: Proptypes.string.isRequired,\r\n  date: Proptypes.string.isRequired,\r\n  totalPrice: Proptypes.string.isRequired,\r\n  deliveryAddress: Proptypes.string.isRequired,\r\n  deliveryNumber: Proptypes.string.isRequired,\r\n};\r\n\r\nexport default SellerOrderCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport TopBar from '../components/TopBar';\r\nimport SellerOrderCard from '../components/SellerOrderCard';\r\nimport { serverUrl } from '../helpers/constants';\r\n\r\nfunction ListOrders() {\r\n  const [orders, setOrders] = useState();\r\n\r\n  useEffect(() => {\r\n    const { token } = JSON.parse(localStorage.getItem('user'));\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const getOrders = async () => {\r\n      const dbOrders = await axios.get(`${serverUrl}/seller/orders`, config);\r\n      setOrders(dbOrders.data.sales);\r\n    };\r\n\r\n    getOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Container fluid>\r\n        <Row>\r\n          {\r\n            orders && orders.map((order) => (\r\n              <Col key={ order.id }>\r\n                <SellerOrderCard\r\n                  id={ order.id }\r\n                  status={ order.status }\r\n                  date={ order.saleDate }\r\n                  totalPrice={ order.totalPrice }\r\n                  deliveryAddress={ order.deliveryAddress }\r\n                  deliveryNumber={ order.deliveryNumber }\r\n                />\r\n              </Col>\r\n            ))\r\n          }\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListOrders;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\nimport Products from './pages/Products';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport CheckoutCart from './pages/CheckoutCart';\r\nimport ListSaleById from './pages/ListSaleById';\r\nimport ListSellerSaleById from './pages/ListSellerSaleById';\r\nimport ListOrders from './pages/ListOrders';\r\nimport SellerOrders from './pages/SellerOrders';\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/login\" component={ Login } />\r\n      <Route path=\"/register\" component={ Register } />\r\n      <PrivateRoute path=\"/customer/products\" component={ Products } />\r\n      <PrivateRoute path=\"/customer/checkout\" component={ CheckoutCart } />\r\n      <PrivateRoute path=\"/customer/orders/:id\" component={ ListSaleById } />\r\n      <PrivateRoute path=\"/customer/orders\" component={ ListOrders } />\r\n      <PrivateRoute path=\"/seller/orders/:id\" component={ ListSellerSaleById } />\r\n      <PrivateRoute path=\"/seller/orders\" component={ SellerOrders } />\r\n      <Redirect strict from=\"/\" to=\"/login\" />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={ store }>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}